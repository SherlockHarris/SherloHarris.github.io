<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sherlcok&#39;s blogs</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-12T14:09:05.882Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Sherlock Harris</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>决策树2</title>
    <link href="http://yoursite.com/2020/05/12/%E5%86%B3%E7%AD%96%E6%A0%912/"/>
    <id>http://yoursite.com/2020/05/12/%E5%86%B3%E7%AD%96%E6%A0%912/</id>
    <published>2020-05-12T14:09:05.000Z</published>
    <updated>2020-05-12T14:09:05.882Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Regression</title>
    <link href="http://yoursite.com/2020/05/06/Regression/"/>
    <id>http://yoursite.com/2020/05/06/Regression/</id>
    <published>2020-05-06T02:27:45.000Z</published>
    <updated>2020-05-06T03:14:03.808Z</updated>
    
    <content type="html"><![CDATA[<h2 id="回归定义"><a href="#回归定义" class="headerlink" title="回归定义"></a>回归定义</h2><blockquote><p>Regression就是找到一个函数function,通过输入特征x，输出一个数值Scalar</p><h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><ul><li>股市预测</li><li>自动驾驶</li><li>商品推荐<h2 id="模型步骤"><a href="#模型步骤" class="headerlink" title="模型步骤"></a>模型步骤</h2></li><li>step1：模型假设，选择模型框架</li><li>step2: 模型评估，如何判断众多模型的好坏（损失函数）</li><li>step3: 模型优化，如何筛选最优的模型（梯度下降）<h3 id="模型假设-线性模型"><a href="#模型假设-线性模型" class="headerlink" title="模型假设-线性模型"></a>模型假设-线性模型</h3></li><li>一元线性模型（单个特征）</li><li>多元线性模型（多个特征）<br>线性回归的优点：结果易于理解，计算不复杂<br>线性回归的缺点：对非线性数据拟合不好<h4 id="疑问：在存在多个特征的情况下，如何进行特征选择"><a href="#疑问：在存在多个特征的情况下，如何进行特征选择" class="headerlink" title="疑问：在存在多个特征的情况下，如何进行特征选择"></a>疑问：在存在多个特征的情况下，如何进行特征选择</h4></li></ul></blockquote><h3 id="模型评估-损失函数"><a href="#模型评估-损失函数" class="headerlink" title="模型评估-损失函数"></a>模型评估-损失函数</h3><p>损失函数的本质仍然是使用距离来判定模型的好坏。</p><h3 id="最佳模型-梯度下降"><a href="#最佳模型-梯度下降" class="headerlink" title="最佳模型-梯度下降"></a>最佳模型-梯度下降</h3><p>本质是筛选最优的模型。求解最优解的方法有最小二乘法和梯度下降法。</p><h3 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a>可能出现的问题</h3><ul><li>局部最优</li><li>等于0</li><li>趋近于0</li><li>过拟合</li></ul><p>思考：可以通过正则化来优化解决过拟合，但是如何解决局部最优的问题</p><h3 id="logistic回归"><a href="#logistic回归" class="headerlink" title="logistic回归"></a>logistic回归</h3><p>logistic回归主要解决分类问题，其解决问题的步骤与线性回归基本一致，但是存在一定的区别</p><ul><li>两者的损失函数也不同，线性回归使用的是MSE，其本质是使真实点到预测直线的方差最小；逻辑回归使用的是MLE，对数损失函数，其本质是使预测概率最接近真实值</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;回归定义&quot;&gt;&lt;a href=&quot;#回归定义&quot; class=&quot;headerlink&quot; title=&quot;回归定义&quot;&gt;&lt;/a&gt;回归定义&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Regression就是找到一个函数function,通过输入特征x，输出一个数值Scalar&lt;/
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>KNN</title>
    <link href="http://yoursite.com/2020/04/26/KNN/"/>
    <id>http://yoursite.com/2020/04/26/KNN/</id>
    <published>2020-04-26T06:26:33.000Z</published>
    <updated>2020-04-26T08:56:04.485Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><blockquote><p>案例：<br>物以类聚，人以群分<br>电影分类</p><p>如果一个样本在特征空间中的k个最相似(即特征空间中最邻近)的样本中的大多数属于某一个类别，则该样本也属于这个类别</p><p>原理：寻找最近的k个数据，推测新数据的分类</p><p>用途：有监督学习，用于<strong>分类</strong>和<strong>预测</strong></p><h2 id="算法原理"><a href="#算法原理" class="headerlink" title="算法原理"></a>算法原理</h2><h3 id="模型三要素"><a href="#模型三要素" class="headerlink" title="模型三要素"></a>模型三要素</h3><ul><li>距离度量<br>闵可夫斯基距离<br>欧氏距离<br>曼哈顿距离<br>切比雪夫距离<br>余弦距离</li><li>k值的选择</li><li>分类决策规则<h3 id="通用步骤"><a href="#通用步骤" class="headerlink" title="通用步骤"></a>通用步骤</h3></li><li>计算距离（欧氏距离 || 马氏距离）</li><li>升序排列  </li><li>取前k个  </li><li><strong>加权</strong>平均<h3 id="k的选取"><a href="#k的选取" class="headerlink" title="k的选取"></a>k的选取</h3></li><li>k太大：导致分类模糊 </li><li>k太小：受个例的影响，波动较大，容易<strong>过拟合</strong></li><li>一般通过交叉验证选择k值</li><li>k一般为技术（方便投票表决）<h3 id="如何选取k"><a href="#如何选取k" class="headerlink" title="如何选取k"></a>如何选取k</h3></li><li>经验</li><li>均方根误差<h2 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3></li><li>算法简单<h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3></li><li>每个点都进行了计算，算法复杂度高，样本数据量不能过多  <h3 id="适用数据范围"><a href="#适用数据范围" class="headerlink" title="适用数据范围"></a>适用数据范围</h3>数值型和标称型</li></ul></blockquote><p>问题：</p><ul><li>KNN如何进行预测？</li><li>关于不同距离度量如何进行选择</li><li>k为偶数怎么办</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;案例：&lt;br&gt;物以类聚，人以群分&lt;br&gt;电影分类&lt;/p&gt;
&lt;p&gt;如果一个样本在特征空间中的k个最相似(即特征空间中
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>机器学习详解</title>
    <link href="http://yoursite.com/2020/04/20/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2020/04/20/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%A6%E8%A7%A3/</id>
    <published>2020-04-20T15:46:35.000Z</published>
    <updated>2020-04-21T04:02:51.702Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-机器学习简介"><a href="#第一章-机器学习简介" class="headerlink" title="第一章 机器学习简介"></a>第一章 机器学习简介</h1><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="机器学习方法三要素"><a href="#机器学习方法三要素" class="headerlink" title="机器学习方法三要素"></a>机器学习方法三要素</h3><blockquote><p>方法 = 模型+策略+算法</p><ul><li>模型：输入空间到输出空间的映射，学习过程即为从假设空间中搜索适合当前数据的假设（确定学习范围）</li><li>策略：从假设空间众多的假设中选择到最优的模型的学习标准或规则（确定学习规则）</li><li>算法：学习模型的具体的计算方法，通常使求解最优化问题（按规则在范围内学习）<h4 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h4>分析当前需要解决的问题，确定模型  </li><li>预测分类：分类</li><li>预测取值：回归</li><li>发现结构：聚类</li><li>发现异常数据：异常检测<h4 id="策略"><a href="#策略" class="headerlink" title="策略"></a>策略</h4>评估模型对以下的效果：  </li><li>单个训练样本</li><li>训练集的整体效果</li><li>包含训练集、预测集在内的所有数据的整体效果<br>需要用于衡量上述问题所定义的指标：  </li><li>损失函数：0-1损失函数、平方损失函数、绝对损失函数、对数损失函数等</li><li>风险函数：经验风险、期望风险、结构风险<br>基本策略：  </li><li>经验风险最小（EMR：Empirical Risk Minimization）</li><li>结构风险最小（SRM：Structural Risk Minimization）<h5 id="损失函数：L-Y-f-x"><a href="#损失函数：L-Y-f-x" class="headerlink" title="损失函数：L(Y,f(x))"></a>损失函数：L(Y,f(x))</h5>用于衡量预测结果和真实结果之间的差距，值越小，代表预测结果越贴近真实结果。通常是一个非负实值函数。</li></ul><p>度量单个样本的预测结果</p><h3 id="经验风险-VS-结构风险"><a href="#经验风险-VS-结构风险" class="headerlink" title="经验风险 VS 结构风险"></a>经验风险 VS 结构风险</h3><h4 id="经验风险"><a href="#经验风险" class="headerlink" title="经验风险"></a>经验风险</h4><p>衡量整个训练集的预测值和真实值的差异：训练集所有损失函数求平均    </p><p>容易导致过拟合</p><h4 id="风险函数（期望风险）"><a href="#风险函数（期望风险）" class="headerlink" title="风险函数（期望风险）"></a>风险函数（期望风险）</h4><p>所有数据集（训练集和预测集</p></blockquote><h4 id="经验风险-VS-结构风险-1"><a href="#经验风险-VS-结构风险-1" class="headerlink" title="经验风险 VS 结构风险"></a>经验风险 VS 结构风险</h4><ul><li>期望风险往往无法计算  </li><li>训练集足够大的时候，可以用经验风险代替期望风险，即局部最优代替全局最优  </li></ul><h3 id="结构风险"><a href="#结构风险" class="headerlink" title="结构风险"></a>结构风险</h3><blockquote><p>在经验风险的基础上增加<strong>正则化项</strong>或者<strong>惩罚项</strong>，该项用于衡量模型的复杂度  </p><h3 id="范数"><a href="#范数" class="headerlink" title="范数"></a>范数</h3><p>惩罚项常用的有零范数、一范数、二范数、迹范数、Frobenius范数和核范数等</p></blockquote><h2 id="模型评估与选择"><a href="#模型评估与选择" class="headerlink" title="模型评估与选择"></a>模型评估与选择</h2><h3 id="模型选择的原则"><a href="#模型选择的原则" class="headerlink" title="模型选择的原则"></a>模型选择的原则</h3><h4 id="误差"><a href="#误差" class="headerlink" title="误差"></a>误差</h4><ul><li>误差（Erro）：预测值与真实值之间的差异</li><li>训练（Training）：通过已知的样本数据进行学习，从而得到模型的过程  </li><li>训练误差（Training Error）：模型作用于训练集时的误差</li><li>泛化（Generalize）：从特殊到一般。指模型作用于新的样本数据（非训练集）</li><li>泛化误差（GEneralize Error）：模型作用于新的样本数据时的误差<h4 id="欠拟合和过拟合"><a href="#欠拟合和过拟合" class="headerlink" title="欠拟合和过拟合"></a>欠拟合和过拟合</h4></li><li>模型容量（Model Capacity）：是指其模拟各种模型的能力  </li><li>过拟合（Overfitting）：某个模型在训练集上表现良好，但是在新样本上表现差。，反之称<strong>欠拟合（Underfitting）</strong>  <h4 id="模型选择"><a href="#模型选择" class="headerlink" title="模型选择"></a>模型选择</h4></li><li><p>模型选择（Model Selection）：针对具体的任务，有不同的模型；同一个模型也会有多组参数。通过分析、评估模型的泛化误差，选择<strong>泛化误差最小</strong>的模型。</p><h4 id="评估思路"><a href="#评估思路" class="headerlink" title="评估思路"></a>评估思路</h4><blockquote><p>通过实验测试，对模型的泛化误差进行评估，宣传粗泛化误差最小的模型。待测数据集全集未知，使用<strong>测试集</strong>进行泛化测试，<strong>测试误差（Testing Error）</strong>即为泛化误差的近似。  </p></blockquote></li><li><p>测试集和训练集要尽可能互斥  </p></li><li><p>测试集和训练集独立同分布  </p><h4 id="留出法（Hold-out）"><a href="#留出法（Hold-out）" class="headerlink" title="留出法（Hold-out）"></a>留出法（Hold-out）</h4><blockquote><p>将已知数据分成两个互斥的部分：训练集和测试集</p></blockquote></li><li><p>两个数据集的划分要尽可能保持数据分布一致性，避免因数据划分过程引入人为的偏差</p></li><li>单次留出法结果往往存在偶然性，稳定性差，通常会进行若干次随即划分、重复实验评估取平均值作为评估结果  <h4 id="交叉验证法（Cross-Validation），也称k折交叉验证（k-fold-Cross-Validation）"><a href="#交叉验证法（Cross-Validation），也称k折交叉验证（k-fold-Cross-Validation）" class="headerlink" title="交叉验证法（Cross Validation），也称k折交叉验证（k-fold Cross Validation）"></a>交叉验证法（Cross Validation），也称k折交叉验证（k-fold Cross Validation）</h4><blockquote><p>将数据集划分k个大小相似的互斥的数据子集，子集数据尽可能保证数据分布的一致性（分层采样），每次从中选取一个数据集作为测试集，其余作为训练集，可以进行k次训练和测试，得到评估均值。使用不同的划分，重复p次，成为p次k折交叉验证。</p><h4 id="留一法（Leave-One-Out，LOO）"><a href="#留一法（Leave-One-Out，LOO）" class="headerlink" title="留一法（Leave-One-Out，LOO）"></a>留一法（Leave-One-Out，LOO）</h4><p>是k折叫擦汗验证的特殊形式，将数据集分成两个，其中一个数据集记录条数为1，作为测试集使用，其余记录作为训练集训练模型。训练出的模型和使用全部数据集训练得到的模型近似，其评估结果比较准确。缺点是当数据集较大时，训练次数和计算规模较大。</p><h4 id="自助法（Bootstrapping）"><a href="#自助法（Bootstrapping）" class="headerlink" title="自助法（Bootstrapping）"></a>自助法（Bootstrapping）</h4><p>是一种产生样本的抽样方法，其实质是有放回的随机抽样。即从已知数据集中随机抽取一条数据，然后将该记录放入测试集同时放回原数据集，继续下一次抽样，知道测试集中的数据条数满足要求。  </p></blockquote></li></ul><blockquote><p>通过有放回的的抽样获得的训练集去训练模型，不在训练集中的数据（总数量的1/3）去用于测试，这样的测试结果被称作<strong>包外估计（Out-of-Bag Estimate,OOB）</strong>  </p><h4 id="几种方法的使用场景"><a href="#几种方法的使用场景" class="headerlink" title="几种方法的使用场景"></a>几种方法的使用场景</h4><h5 id="留出法"><a href="#留出法" class="headerlink" title="留出法"></a>留出法</h5><ul><li>实现简单、方便，在一定程度上能评估泛化误差  </li><li>测试集和训练集分开，缓解了过拟合 </li><li>一次划分，评估结果偶然性大</li><li>数据被划分后，用于训练、测试的数据更少了  <h5 id="交叉验证法（留一法）"><a href="#交叉验证法（留一法）" class="headerlink" title="交叉验证法（留一法）"></a>交叉验证法（留一法）</h5></li><li>k可以根据实际情况设置，充分利用了所有样本  </li><li>多次划分，评估结果相对稳定  </li><li>计算比较繁琐，需要进行k次训练和评估   <h5 id="自助法"><a href="#自助法" class="headerlink" title="自助法"></a>自助法</h5></li><li>样本量较小时可以通过自助法产生多个自主样本集，且有约36.8％的测试样本  </li><li>对于总体的理论分布没有要求  </li><li>无放回抽样引入了额外的偏差  <h5 id="几种方法的选择"><a href="#几种方法的选择" class="headerlink" title="几种方法的选择"></a>几种方法的选择</h5></li><li>已知数据集数量充足时，通常采用留出法或者k折交叉验证法   </li><li>对于已知数据集较小且难以有效划分训练集/测试集的时候，采用自助法</li><li>对于已知数据集较小且可以有效划分训练集/测试集的时候，采用留一法<h3 id="模型的性能指标"><a href="#模型的性能指标" class="headerlink" title="模型的性能指标"></a>模型的性能指标</h3></li></ul></blockquote><h3 id="模型评估的方法"><a href="#模型评估的方法" class="headerlink" title="模型评估的方法"></a>模型评估的方法</h3><h3 id="模型性能的比较"><a href="#模型性能的比较" class="headerlink" title="模型性能的比较"></a>模型性能的比较</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第一章-机器学习简介&quot;&gt;&lt;a href=&quot;#第一章-机器学习简介&quot; class=&quot;headerlink&quot; title=&quot;第一章 机器学习简介&quot;&gt;&lt;/a&gt;第一章 机器学习简介&lt;/h1&gt;&lt;h2 id=&quot;基础知识&quot;&gt;&lt;a href=&quot;#基础知识&quot; class=&quot;head
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>机器学习</title>
    <link href="http://yoursite.com/2020/04/13/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2020/04/13/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-04-13T07:49:15.000Z</published>
    <updated>2020-04-26T08:04:31.141Z</updated>
    
    <content type="html"><![CDATA[<p>泛函分析<br>特征空间<br>信息熵</p><h1 id="个人理解（目标）："><a href="#个人理解（目标）：" class="headerlink" title="个人理解（目标）："></a>个人理解（目标）：</h1><p>助手，模拟、延申、扩展人类智能</p><h1 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h1><h2 id="人工智能概念："><a href="#人工智能概念：" class="headerlink" title="人工智能概念："></a>人工智能概念：</h2><p>“两维度和一核心”：<strong>学习的每个方面</strong>或<strong>智能的任何特征</strong>都能被精确地描述到用机器来模拟的程度</p><h2 id="人工智能五大流派"><a href="#人工智能五大流派" class="headerlink" title="人工智能五大流派"></a>人工智能五大流派</h2><ul><li>符号</li><li>联结</li><li>进化</li><li>贝叶斯</li><li>行为类比<h2 id="机器学习的主要任务"><a href="#机器学习的主要任务" class="headerlink" title="机器学习的主要任务"></a>机器学习的主要任务</h2></li><li>知识表达：让机器看懂知识</li><li>知识记忆：让机器记住并识别已有知识</li><li>知识推理（预测）：让机器从已有知识中获取新知识（预测）<h2 id="机器学习系统的三大特征"><a href="#机器学习系统的三大特征" class="headerlink" title="机器学习系统的三大特征"></a>机器学习系统的三大特征</h2><blockquote><p>机器学习问题的描述：对于<strong>某类任务T</strong>和<strong>性能度量P</strong>，如何使一个计算机程序在<strong>任务T</strong>上以<strong>P衡量</strong>的性能随着<strong>知识E</strong>而自我完善，也就是机器从知识E中学习</p></blockquote></li><li>任务的种类T</li><li>衡量性能提高的标准P</li><li>知识的来源和表达E<h2 id="设计一个学习系统需要"><a href="#设计一个学习系统需要" class="headerlink" title="设计一个学习系统需要"></a>设计一个学习系统需要</h2></li><li>选择训练数据及表达方式(已有知识)；</li><li>选择目标函数(性能)；</li><li>选择学习系统模型(知识学习与推理)；</li><li>选择学习算法(根据知识改善性能)<h2 id="开发机器学习应用程序的基本步骤"><a href="#开发机器学习应用程序的基本步骤" class="headerlink" title="开发机器学习应用程序的基本步骤"></a>开发机器学习应用程序的基本步骤</h2></li><li>收集数据</li><li>准备输入数据：特定的数据格式</li><li>分析输入数据</li><li>训练算法(使用无监督学习不需要此步)</li><li>测试算法</li><li>使用算法</li></ul><p>程序员的数学：概率统计</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;泛函分析&lt;br&gt;特征空间&lt;br&gt;信息熵&lt;/p&gt;
&lt;h1 id=&quot;个人理解（目标）：&quot;&gt;&lt;a href=&quot;#个人理解（目标）：&quot; class=&quot;headerlink&quot; title=&quot;个人理解（目标）：&quot;&gt;&lt;/a&gt;个人理解（目标）：&lt;/h1&gt;&lt;p&gt;助手，模拟、延申、扩展人类智能
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>第三章</title>
    <link href="http://yoursite.com/2020/03/30/%E7%AC%AC%E4%B8%89%E7%AB%A0/"/>
    <id>http://yoursite.com/2020/03/30/%E7%AC%AC%E4%B8%89%E7%AB%A0/</id>
    <published>2020-03-30T12:04:28.000Z</published>
    <updated>2020-04-17T12:10:36.426Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Q"><a href="#Q" class="headerlink" title="Q"></a>Q</h4><ul><li>两个对象用 = 赋值的时候发生了什么</li><li>友元类的声明必须在public？</li><li>函数声明和实现的形参必须一样？声明的时候形参必须有？</li><li><h1 id="pragma-once"><a href="#pragma-once" class="headerlink" title="pragma once"></a>pragma once</h1></li><li>复制构造函数形式</li><li>复制构造函数调用时间</li><li>组合类的成员对象初始化必须放在初始化列表？顺序是按定义顺序<br>对象必须在初始化列表里面初始化</li><li>类内为什么可以有本类的指针</li><li>静态数据成员可以是private吗？还是必须是public？</li><li>静态成员函数可以访问非静态数据成员吗？</li><li>静态数据成员只能被初始化一次</li><li>静态成员函数内部可以有本类吗？</li><li>mutable?数据类型</li><li>栈区 堆区 无名区</li><li>指针数组和delete []p</li><li>Point *p = new Point[3]</li><li>Point (*p)[3]  = new Point[2][3]<h2 id="静态成员"><a href="#静态成员" class="headerlink" title="静态成员"></a>静态成员</h2><blockquote><p>静态数据成员必须初始化，在类外初始化的时候不需要加static<br>静态成员方法在类外实现的时候也不需要加static<br>静态成员方法不能直接访问非静态数据成员（非静态成员函数里面都有一个隐含的this指针，静态成员函数没有），间接呢？</p><h2 id="常成员"><a href="#常成员" class="headerlink" title="常成员"></a>常成员</h2><p>只能在初始化列表中初始化且必须初始化<br>常成员函数  const加在后面  不能修改普通数据成员，只能修改mutable类型的数据成员，目的是为了访问常数据成员，也可以访问非常数据成员<br>常数据成员不能被修改<br>常对象只能访问常成员函数<br>常引用也必须在初始化列表中初始化<br>非常对象可以调用常成员函数<br>非常对象调用重载的成员函数优先非常成员函数</p><h2 id="对象数组"><a href="#对象数组" class="headerlink" title="对象数组"></a>对象数组</h2><h2 id="this指针"><a href="#this指针" class="headerlink" title="this指针"></a>this指针</h2></blockquote></li></ul><h1 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h1><h2 id="重载赋值运算符和拷贝构造函数的情况："><a href="#重载赋值运算符和拷贝构造函数的情况：" class="headerlink" title="重载赋值运算符和拷贝构造函数的情况："></a>重载赋值运算符和拷贝构造函数的情况：</h2><p>类的数据成员内有指针的情况，</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Q&quot;&gt;&lt;a href=&quot;#Q&quot; class=&quot;headerlink&quot; title=&quot;Q&quot;&gt;&lt;/a&gt;Q&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;两个对象用 = 赋值的时候发生了什么&lt;/li&gt;
&lt;li&gt;友元类的声明必须在public？&lt;/li&gt;
&lt;li&gt;函数声明和实现的形参必须一样
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>单片机</title>
    <link href="http://yoursite.com/2020/03/03/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    <id>http://yoursite.com/2020/03/03/%E5%8D%95%E7%89%87%E6%9C%BA/</id>
    <published>2020-03-03T15:51:07.000Z</published>
    <updated>2020-04-10T06:06:50.416Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="单片机基本结构"><a href="#单片机基本结构" class="headerlink" title="单片机基本结构"></a>单片机基本结构</h2><ul><li>中央处理器  </li><li>程序存储器 ROM  </li><li>数据存储器 RAM  </li><li>并行输入/输出端口  </li><li>串行输入/输出端口  </li><li>定时/计数器  </li><li>系统时钟<br><img src="https://raw.githubusercontent.com/SherlockHarris/picture/master/img/structure.png" alt="">  <h2 id="现代单片机又加入了许多新的功能"><a href="#现代单片机又加入了许多新的功能" class="headerlink" title="现代单片机又加入了许多新的功能"></a>现代单片机又加入了许多新的功能</h2></li><li>模拟/数字转换器（ADC） </li><li>数字/模拟转换器（DAC）  </li><li>温度传感器  </li><li>液晶驱动电路  </li><li>电压监控 </li><li>“看门狗”电路 </li><li>低压检测电路  <h1 id="MCS-51单片机硬件结构和原理"><a href="#MCS-51单片机硬件结构和原理" class="headerlink" title="MCS-51单片机硬件结构和原理"></a>MCS-51单片机硬件结构和原理</h1><h2 id="单片机硬件结构"><a href="#单片机硬件结构" class="headerlink" title="单片机硬件结构"></a>单片机硬件结构</h2><h3 id="单片机的引脚功能"><a href="#单片机的引脚功能" class="headerlink" title="单片机的引脚功能"></a>单片机的引脚功能</h3></li><li>数据总线</li><li>地址总线  </li><li>控制总线<br><img src="https://raw.githubusercontent.com/SherlockHarris/picture/master/img/MCUyinjiao.png" alt=""><h4 id="1-主电源引脚Vcc和Vss（2个引脚）"><a href="#1-主电源引脚Vcc和Vss（2个引脚）" class="headerlink" title="1.主电源引脚Vcc和Vss（2个引脚）"></a>1.主电源引脚Vcc和Vss（2个引脚）</h4>电源输入端(40号)：Vcc（+5V）<br>共用接地端(20号)：Vss（GND）  <h4 id="2-时钟振荡电路引脚XTAL1和XTAL2-（两个引脚）"><a href="#2-时钟振荡电路引脚XTAL1和XTAL2-（两个引脚）" class="headerlink" title="2.时钟振荡电路引脚XTAL1和XTAL2  （两个引脚）"></a>2.时钟振荡电路引脚<strong>XTAL1</strong>和<strong>XTAL2</strong>  （两个引脚）</h4>XTAL1（19号）和XTAL2（18）分别用做晶体振荡电路的反向输入端和输出端<br>为单片机提供<strong>工作节拍</strong>，即单片机的<strong>主频</strong>  <h4 id="3-控制信号引脚（4个引脚）"><a href="#3-控制信号引脚（4个引脚）" class="headerlink" title="3.控制信号引脚（4个引脚）"></a>3.控制信号引脚（4个引脚）</h4>1.RST/VPD（9号）  <blockquote><p>RST：复位信号输入端<br>VPD：内部TAM的备用电源输入端   </p></blockquote></li></ul><p>2.ALE/$\overline{PROG}$ (30号) </p><blockquote><p>ALE：地址锁存允许信号<br>$\overline{PROG}$：读选通信号。当访问外部ROM时，产生负脉冲作为外部ROM的选通信号  </p></blockquote><p>3.$\overline{EA}$/VPP</p><blockquote><p>外部程序存储器控制信号EA(31号):</p><blockquote><p>EA=0，访问外部程序存储器<br>EA=1，访问片内（0000H-0FFFH）与片外程序存储器<br>VPP为8751 EPROM的21V编程电源输入端  </p><h3 id="但单片机的内部结构"><a href="#但单片机的内部结构" class="headerlink" title="但单片机的内部结构"></a>但单片机的内部结构</h3><h2 id="中央处理器"><a href="#中央处理器" class="headerlink" title="中央处理器"></a>中央处理器</h2><h3 id="运算器"><a href="#运算器" class="headerlink" title="运算器"></a>运算器</h3><h3 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h3><h3 id="布尔（位）处理器"><a href="#布尔（位）处理器" class="headerlink" title="布尔（位）处理器"></a>布尔（位）处理器</h3><h2 id="存储器"><a href="#存储器" class="headerlink" title="存储器"></a>存储器</h2><h3 id="程序存储器"><a href="#程序存储器" class="headerlink" title="程序存储器"></a>程序存储器</h3><h3 id="数据存储器"><a href="#数据存储器" class="headerlink" title="数据存储器"></a>数据存储器</h3><h2 id="并行输入-输出端口"><a href="#并行输入-输出端口" class="headerlink" title="并行输入/输出端口"></a>并行输入/输出端口</h2><h3 id="P1口"><a href="#P1口" class="headerlink" title="P1口"></a>P1口</h3><h3 id="P2口"><a href="#P2口" class="headerlink" title="P2口"></a>P2口</h3><h3 id="P3口"><a href="#P3口" class="headerlink" title="P3口"></a>P3口</h3><h3 id="P0口"><a href="#P0口" class="headerlink" title="P0口"></a>P0口</h3><h3 id="并行口的应用"><a href="#并行口的应用" class="headerlink" title="并行口的应用"></a>并行口的应用</h3><h2 id="时序电路和时序"><a href="#时序电路和时序" class="headerlink" title="时序电路和时序"></a>时序电路和时序</h2><h3 id="时钟电路"><a href="#时钟电路" class="headerlink" title="时钟电路"></a>时钟电路</h3><h3 id="时序"><a href="#时序" class="headerlink" title="时序"></a>时序</h3><h2 id="单片机的工作方式"><a href="#单片机的工作方式" class="headerlink" title="单片机的工作方式"></a>单片机的工作方式</h2><h3 id="复位方式"><a href="#复位方式" class="headerlink" title="复位方式"></a>复位方式</h3><h3 id="程序执行方式"><a href="#程序执行方式" class="headerlink" title="程序执行方式"></a>程序执行方式</h3><h3 id="低功耗运行方式"><a href="#低功耗运行方式" class="headerlink" title="低功耗运行方式"></a>低功耗运行方式</h3></blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;h2 id=&quot;单片机基本结构&quot;&gt;&lt;a href=&quot;#单片机基本结构&quot; class=&quot;headerlink&quot; title=&quot;单片机基本结构&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="School" scheme="http://yoursite.com/categories/School/"/>
    
      <category term="Hardware" scheme="http://yoursite.com/categories/School/Hardware/"/>
    
    
      <category term="MCU" scheme="http://yoursite.com/tags/MCU/"/>
    
  </entry>
  
  <entry>
    <title>微机原理</title>
    <link href="http://yoursite.com/2020/03/03/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    <id>http://yoursite.com/2020/03/03/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/</id>
    <published>2020-03-03T02:07:56.000Z</published>
    <updated>2020-04-15T01:22:04.515Z</updated>
    
    <content type="html"><![CDATA[<h3 id="符号指令的书写格式为："><a href="#符号指令的书写格式为：" class="headerlink" title="符号指令的书写格式为："></a>符号指令的书写格式为：</h3><blockquote><p>[标号:] 操作码助记符 操作数助记符 [;注释]  </p><ul><li>标号代表该指令在存储器中的地址，为分支、循环提供转移目标  </li><li>操作数  目标操作数,源操作数  <h3 id="寻址方式"><a href="#寻址方式" class="headerlink" title="寻址方式"></a>寻址方式</h3>寻址方式：在<strong>指令中用于说明操作数所在地址的方法</strong><br>8086指令系统中寻址方式：</li><li>与数据有关 </li><li>与地址有关<br>操作数存放方式：</li><li>直接包含在指令中 立即数 立即寻址 </li><li>某寄存器中 寄存器操作数 寄存器寻址  </li><li>内存中  操作器操作数 存储器寻址<h4 id="立即寻址"><a href="#立即寻址" class="headerlink" title="立即寻址"></a>立即寻址</h4>eg：MOV AL,80H<br>用途：给某些寄存器或存储单元赋值。80H位数会随AL变换<h4 id="寄存器寻址"><a href="#寄存器寻址" class="headerlink" title="寄存器寻址"></a>寄存器寻址</h4>eg:MOV DL,AL<h4 id="存储器寻址"><a href="#存储器寻址" class="headerlink" title="存储器寻址"></a>存储器寻址</h4></li><li>直接寻址方式<br>有效地址EA=默认段寄存器DS：位移量<br>MOV AX,ES:[3000H]  指定段寄存器为ES    </li><li>寄存器间接寻址：BX，SI，DI，BP<br>SI：段寄存器DS<br>DI：PA=（DS）左移四位+（BX）/（SI）/（DI）<br>BP：操作数存放在SS指示的堆栈段中   PA=（SS）左移四位+（BP）   <ul><li>寄存器相对寻址方式：以寄存器（BX，SI，DI，BP ）内容为基地址，+位移量（8/16位）得到有效地址EA的寻址方式    选择[BX,SI,DI],默认段寄存器DS，若BP，则为SS<br>MOV DX,[BX+1500]  BX+1500只取16位，超过的丢掉（一个段最多64K，即16位）<br>DS(7000|0) + BX(2000) + 1500  = 73500   </li><li>基址（BX，BP）变址（SI，DI）寻址<br>eg：MOV AX,[BX+DI]<br>DS[1000H]+BX[5000H]+DI[2000H]=7000H  </li></ul></li><li>相对基址（BX，BP）变址（SI，DI）寻址  <h3 id="与地址有关的寻址方式"><a href="#与地址有关的寻址方式" class="headerlink" title="与地址有关的寻址方式"></a>与地址有关的寻址方式</h3></li><li>段内直接寻址（相对寻址）<br>有效转移地址 = IP+8/16位位移量  </li><li>段内间接寻址<br>有效地址在寄存器或者内存单元中，适用于无条件转换指令和调用指令  </li><li>段间直接寻址<br>段值送入CS中，偏移量送入IP  </li><li>段间间接寻址    <h2 id="8086指令系统（133条）"><a href="#8086指令系统（133条）" class="headerlink" title="8086指令系统（133条）"></a>8086指令系统（133条）</h2></li><li>传送指令<br>通用传送指令：MOV，XCHG，堆栈和地址传送指令<br>MOV格式：MOV DST，SRC<br>功能：把一个字节或字的源操作数送到目标操作数所在的单元<br>eg：MOV AL,BL;BL中的8位数据送AL  </li><li>逻</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;符号指令的书写格式为：&quot;&gt;&lt;a href=&quot;#符号指令的书写格式为：&quot; class=&quot;headerlink&quot; title=&quot;符号指令的书写格式为：&quot;&gt;&lt;/a&gt;符号指令的书写格式为：&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;[标号:] 操作码助记符 操作数助记符 [
      
    
    </summary>
    
    
    
      <category term="微机原理" scheme="http://yoursite.com/tags/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
      <category term="School" scheme="http://yoursite.com/tags/School/"/>
    
  </entry>
  
  <entry>
    <title>pandas</title>
    <link href="http://yoursite.com/2020/02/28/pandas/"/>
    <id>http://yoursite.com/2020/02/28/pandas/</id>
    <published>2020-02-28T11:30:01.000Z</published>
    <updated>2020-03-01T00:46:10.308Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Pandas介绍"><a href="#Pandas介绍" class="headerlink" title="Pandas介绍"></a>Pandas介绍</h2><h3 id="Pandas介绍-数据处理工具"><a href="#Pandas介绍-数据处理工具" class="headerlink" title="Pandas介绍 - 数据处理工具"></a>Pandas介绍 - 数据处理工具</h3><pre><code>panel + data + analysis  面板    数据    分析  面板数据分析  </code></pre><h3 id="优点"><a href="#优点" class="headerlink" title="优点:"></a>优点:</h3><ul><li>便捷的数据处理能力  </li><li>读取文件方便  </li><li>封装了Matplotlib、Numpy的画图和计算    <h2 id="核心数据结构："><a href="#核心数据结构：" class="headerlink" title="核心数据结构："></a>核心数据结构：</h2></li><li>DataFrame  </li><li>Panel  </li><li>Series    <h3 id="DataFrame"><a href="#DataFrame" class="headerlink" title="DataFrame"></a>DataFrame</h3><pre><code class="lang-python">stock_change = pd.DataFrame(stock_change)  #添加行索引：    stock = [&quot;股票{}&quot;.format(i) for i in range(10)]  pd.DataFrame(stock_change,index = stock)  #添加列索引：  date = pd.date_range(start = &quot;20180101&quot;,period = 5,fred=&quot;B&quot;)  pd.DataFrame(stock_change,index = stock,conlumns=date)</code></pre><h4 id="结构："><a href="#结构：" class="headerlink" title="结构："></a>结构：</h4>有行索引和列索引的<strong>二维数组</strong>  <h4 id="属性："><a href="#属性：" class="headerlink" title="属性："></a>属性：</h4></li><li>shape  </li><li>index：行索引  </li><li>columns：列索引   </li><li>values  </li><li>T      <h4 id="方法："><a href="#方法：" class="headerlink" title="方法："></a>方法：</h4></li><li>head()：前几行  </li><li>tail()：后几行  <h4 id="索引设置："><a href="#索引设置：" class="headerlink" title="索引设置："></a>索引设置：</h4></li><li>修改索引值(不能单独修改某个索引)：重新建立，并设置索引  </li><li>重设索引（行索引）（不常用）：  data.reset_index(drop = False),默认drop为False，不删除原来索引，True删除原来索引  </li><li>以某列值设置为新的索引：data.set_index(‘列名’)</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Pandas介绍&quot;&gt;&lt;a href=&quot;#Pandas介绍&quot; class=&quot;headerlink&quot; title=&quot;Pandas介绍&quot;&gt;&lt;/a&gt;Pandas介绍&lt;/h2&gt;&lt;h3 id=&quot;Pandas介绍-数据处理工具&quot;&gt;&lt;a href=&quot;#Pandas介绍-数据处理工
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>TensorFlow</title>
    <link href="http://yoursite.com/2020/02/23/TensorFlow/"/>
    <id>http://yoursite.com/2020/02/23/TensorFlow/</id>
    <published>2020-02-23T11:43:22.000Z</published>
    <updated>2020-02-25T00:17:05.443Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TensorFlow框架介绍"><a href="#TensorFlow框架介绍" class="headerlink" title="TensorFlow框架介绍"></a>TensorFlow框架介绍</h1><h2 id="TF数据流图"><a href="#TF数据流图" class="headerlink" title="TF数据流图"></a>TF数据流图</h2><p>TensorFlow程序通常由两部分组成：<strong>构建图</strong>和<strong>执行图</strong><br>构建阶段：数据（张量-Tensor）与操作（节点-Operation）的执行步骤被描述成一个图<br>执行阶段：使用会话执行构建好的图中的操作  </p><ul><li>图和会话：<blockquote><ul><li>图：时TensorFlow将计算表示为指令之间的依赖关系的一种表示法  </li><li>会话：TensorFlow跨一个或多个本地或远程设备运行数据流图的机制  </li></ul></blockquote></li><li>张量：TensorFlow中的基本操作对象  </li><li>节点：提供图当中执行的操作 <h2 id="图与TensorBoard"><a href="#图与TensorBoard" class="headerlink" title="图与TensorBoard"></a>图与TensorBoard</h2>图包含了一组tf.Operation代表的<strong>计算单元对象</strong>和tf.Tensor代表的<strong>计算单元之间流动的数据</strong>，即<strong>数据+操作</strong><h3 id="默认图"><a href="#默认图" class="headerlink" title="默认图"></a>默认图</h3>TensorFlow默认创建的图<br>查看默认图的方式：</li><li><strong>调用方法</strong>：通过调用tf.get_default_graph()访问，要将操作添加到默认图中，直接创建OP即可</li><li><strong>查看属性</strong>：tensor、op、sess都含有graph属性，默认都在一张图中    </li></ul><h3 id="自定义图"><a href="#自定义图" class="headerlink" title="自定义图"></a>自定义图</h3><ul><li>通过tf.Graph()自定义创建图      </li></ul><pre><code class="lang-python">new_g = tf.Graph()</code></pre><ul><li>使用tf.Graph.as_default()上下文管理器在该图中创建OP  </li></ul><pre><code class="lang-python">with new_g.as_default():      定义数据和操作：</code></pre><p>此时开启会话的时候要加参数：  </p><pre><code class="lang-python">with tf.Session(graph = new_g) as new_sess</code></pre><p>这是因为tf.Session的默认参数里graph = None 即默认图  </p><h3 id="TensorBoard：可视化学习"><a href="#TensorBoard：可视化学习" class="headerlink" title="TensorBoard：可视化学习"></a>TensorBoard：可视化学习</h3><p>步骤：</p><ul><li>数据序列化-events文件（将图序列化）  <pre><code class="lang-python">#path最好用绝对路径  tf.summary.FileWriter(path,graph)</code></pre>在指定目录下生成一个event文件，其名称格式如下：<blockquote><p>events.out.tfevents.{timestamp}.{hostname}</p></blockquote></li><li>启动TensorBoard<blockquote><p>在终端输入  </p><pre><code>tensorboard --logdir=path</code></pre><p>path时序列化时使用的path<br>也可以使用   </p><pre><code>tensorboard --logdir=path --host=127.0.0.1</code></pre><p>改变访问地址，注意在浏览器输入终端给出的地址时一定不能使用CTRL+C退出tensorboard   </p><h3 id="OP"><a href="#OP" class="headerlink" title="OP"></a>OP</h3><p>| 操作函数 | 生成-&gt; | 操作对象 |<br>| :—-: | :—-: | :—-: |<br>| tf.constant(Tensor对象) | 生成 | 输入Tensor - Const - 输出 Tensor对象 |<br>| tf,add(Tensor对象1,Tensor对象2) | 生成 | 输入Tensor1，Tensor对象2 - Add对象 - 输出 Tensor对象3 |<br>一个操作对象（Operation）时TensorFlow途中的一个节点，可以接收0各或者多个Tensor，并且可以输出0个或者多个Tensor，<strong>Operation</strong>对象是通过op构造函数（如tf.mutmul()）创造出来的</p><p>例如:c = tf.matmul(a,b)创建了一个Operation对象，类型未MatMul累心，它将张量a，b作为输入，c作为输出，并输出数据，打印的时候也是打印的数据。其中tf.matmul()是函数，在执行matmul函数的过程中会通过MatMul类创建一个与之对应的对象  </p></blockquote></li></ul><p>打印张量（Tensor）出来的：</p><blockquote><p>Tensor(“Const:0”,shape=(),dtype=float32)<br>Tensor(“Const_1:0”,shape=(),dtype=float32)<br>Tensor(“Add:0”,shape=(),dtype=float32)</p></blockquote><p>tf.Tensor对象以输出该Tensor的OP明确命名。Tensor名称的形式：  </p><blockquote><p><OP_NAME>:\<i>  </p></blockquote><p>其中：</p><ul><li><OP_NAME>是生成该Tensor的指令的名称  </li><li>\<i>是一个整数，它表示该张量在指令中的输出中的索引  </li></ul><p><strong>指令名称</strong><br>tf.Graph对象为其包含的tf.Operation对象定义的一个命名空间<br>例如：</p><pre><code class="lang-python">tf.constant(42.0,name=&quot;answer&quot;)</code></pre><p>创建了一个名为”answer”的新tf.Operation并返回一个名为”answer:0”的tf.Tensor。如果默认图已经包含名为”answer”的指令，则TensorFlow会在名称上附加”1”、”2”等字符，以便让其名称具有唯一性</p><blockquote><p>当修改后，Tensorboard中显示的名字也会被修改</p><h4 id="常见OP"><a href="#常见OP" class="headerlink" title="常见OP"></a>常见OP</h4><div class="table-container"><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">实例</th></tr></thead><tbody><tr><td style="text-align:center">标量运算</td><td style="text-align:center">add,sub,mul,div,log,greater,less,equal</td></tr><tr><td style="text-align:center">向量运算</td><td style="text-align:center">concat,slice,splot,constant,rank,shape,shuffle</td></tr><tr><td style="text-align:center">矩阵运算</td><td style="text-align:center">matmul,matrixinverse,matrixdateminant</td></tr><tr><td style="text-align:center">带状态的运算</td><td style="text-align:center">Variable,assgin,assginadd</td></tr><tr><td style="text-align:center">神经网络组件</td><td style="text-align:center">softmax,sigmoid,relu,convolution,max_pool</td></tr><tr><td style="text-align:center">存储，恢复</td><td style="text-align:center">Save,Restore</td></tr><tr><td style="text-align:center">队列及同步运算</td><td style="text-align:center">Enqueue,Dequeue,MutexAcquire,MutexRelease</td></tr><tr><td style="text-align:center">控制流</td><td style="text-align:center">Merge,Switch,Enter,Leave,Nextiteration</td></tr></tbody></table></div></blockquote><h2 id="会话"><a href="#会话" class="headerlink" title="会话"></a>会话</h2><h3 id="会话创建"><a href="#会话创建" class="headerlink" title="会话创建"></a>会话创建</h3><ul><li>tf.Session:用于完整的程序当中  </li><li>tf.InteractiveSession:用于交互式上下文中的TensorFlow，例如shell  <h3 id="会话的注意资源"><a href="#会话的注意资源" class="headerlink" title="会话的注意资源"></a>会话的注意资源</h3></li><li>会话掌握资源，用完要回收 — 使用上下文管理器  </li><li>初始化会话对象时的参数  <blockquote><ul><li>graph = None </li><li>target:如果将此参数留空（默认设置），会话将使用本地计算机中的设备，可以指定grpc://网址，以便于指定TensorFlow服务器的地址，这使得会话可以访问该服务器控制的计算机上的所有设备  </li><li>config:用来了解设备信息 — 根据打印的日志了解操作运行在哪个设备上<pre><code class="lang-python">#运行会话并打印设备信息   sess = tf.Session(config=tf.ConfigProt(allow_soft_placement=True,log_device_placement=True))</code></pre><h3 id="会话的run"><a href="#会话的run" class="headerlink" title="会话的run()"></a>会话的run()</h3><pre><code class="lang-python">run(fetches,feed_dict=None,options=None,run_metadata=None)</code></pre></li><li>通过使用sess.run()来运行operation  </li><li>fetches：单一的operation，或者列表、元组（其他不属于tensorflow的类型不行）  </li><li>feed_dict：参数允许调用者覆盖途中张量的值，运行时赋值  </li><li>与tf.placeholder搭配使用，则会检查值的形状是否与占位符兼容  <h3 id="feed操作"><a href="#feed操作" class="headerlink" title="feed操作"></a>feed操作</h3></li><li>placeholder提供占位符，run时候通过feed_dict指定参数  <pre><code class="lang-python">def session_run_demo()：&quot;&quot;&quot;会话的run方法:return:&quot;&quot;&quot;  # 定义占位符  a = tf.placeholder(tf.float32)  b = tf.placeholder(tf.float32)sum_ab = tf.add(a,b)print(&quot;sum_ab = \n&quot;,sum_ab)# 开启会话  with tf.Session() as sess:print(&quot;占位符的结果：\n&quot;,sess.run(sum_ab,feed_dict={a:3.0,b:4.0}))return None</code></pre>请注意运行时候的错误error：<blockquote><p>RuntimeError:如果这Session时无效状态（会话已关闭）。<br>TypeError:如果fetches或者feed_dict键的类型不合适。<br>ValueError:如果fetches或feed_dict键无效或引用Tensor不存在的键  </p><h2 id="张量（和ndarray有联系）"><a href="#张量（和ndarray有联系）" class="headerlink" title="张量（和ndarray有联系）"></a>张量（和ndarray有联系）</h2><p>TensorFlow的张量就是一个n维数组，类型为tf.Tensor。Tensor具有两个重要的属性：</p></blockquote></li></ul></blockquote></li><li>type：数据类型  </li><li>shape：形状（阶）  <h3 id="张量的类型"><a href="#张量的类型" class="headerlink" title="张量的类型"></a>张量的类型</h3>| 数据类型 | Python类型 | 描述 |<br>| :—-: | :—-: | :—-: |<br>| DT_FLOAT | tf.float32 | 32位浮点数 |<br>| DT_DOUBLE | tf.float64 | 64位浮点数 |<br>| DT_INT64 | tf.int64 | 64位有符号整型 |<br>| DT_INT32 | tf.int32 | 32位有符号整型 |<br>| DT_INT16 | tf.int16 | 16位有符号整型 |<br>| DT_INT8 | tf.int8 | 8位有符号整型 |<br>| DT_UINT8 | tf.uint8 | 8位无符号整型 |<br>| DT_STRING | tf.string | 可变长度的字节数组，每一个张量元素都是一个字节数组 |<br>| DT_BOOL | tf.bool | 布尔型 |<br>| DT_COMPLEX64 | tf.complex64 | 由两个32位浮点数组成的复数：实数和虚数 |<br>| DT_QINT32 | tf.qint32 | 用于量化Ops的32位有符号整型 |<br>| DT_QINT8 | tf.qint8 | 用于量化Ops的8位有符号整型 |<br>| DT_QUINT8 | tf.quint8 | 用于量化Ops的8位无符号整型 |<h3 id="张量的阶"><a href="#张量的阶" class="headerlink" title="张量的阶"></a>张量的阶</h3>| 数据 | 在计算机中的存储 | 阶数 |<br>| :—-: | :—-: | :—-: |<br>| 标量 | 一个数字 | 0阶张量 |<br>| 向量 | 一维数组 [2,3,4] | 1阶张量 |<br>| 矩阵 | 二维数组[ [2,3,4],[2,3,4] ] | 2阶张量 |<br>| … | … | … |<br>| 张量 | n维数组 | n阶张量 |<h3 id="创建张量的指令"><a href="#创建张量的指令" class="headerlink" title="创建张量的指令"></a>创建张量的指令</h3></li><li>固定值张量    <pre><code class="lang-python">tf.zeros(shape,dtype=tf.float32,name = None)tf.zeros_like(tensor,dtype=tf.float32,name=None)  tf.oness(shape,dtype=tf.float32,name = None)tf.ones_like(tensor,dtype=tf.float32,name=None) #创建了一个填充了标量值的张量，此操作创建一个张量的形状dims并填充她value tf.fill(dims,value,name=None)#创建一个常数张量tf.constant(value,dtype=None,shape=None,name=&#39;Const&#39;)</code></pre></li><li>随机值张量  <pre><code class="lang-python">tf.random_normal(shape,mean=0.0,stddev=1.0,dtype=float32,seed=None,name=None)</code></pre>正态分布  </li><li>其它特殊的创建张量OP：<blockquote><ul><li>tf.Variable  </li><li>tf.placeholder  </li></ul></blockquote></li></ul><h3 id="张量的变换"><a href="#张量的变换" class="headerlink" title="张量的变换"></a>张量的变换</h3><ul><li>类型改变  <pre><code class="lang-python">tf.string_to_number(string_tensor,out_type=None,name=None)tf.to_double(x,name=&#39;ToDouble&#39;)tf.to_float(x,name=&#39;ToFloat&#39;)tf.to_bfloat16(x,name=&#39;ToBFloat16&#39;)tf.to_int32(x,name=&#39;ToInt32&#39;)tf.to_int64(x,name=&#39;ToInt64&#39;)tf.cast(x,dtype,name=None)</code></pre>tf.cast()不会改变原始的tensor，返回改变类型后新的tensor</li><li>形状改变<br>TensorFlow的张量具有两种形状变换，动态形状和静态形状<pre><code class="lang-python">tf.reshape（不会改变原始的tensor，返回新的改变类型后的tensor）  tf.set_shape</code></pre></li><li>静态形状<br>Q：什么时候才能改变静态形状？<br>A：在形状还没有完全固定下来的情况。<br>Q：什么情况是形状未固定？<br>A：tf.placeholder生成的tensor中带有？号的部分 <pre><code class="lang-python">a_p = tf.placeholder(dtype=tf.float32,shape=[None，None])   a_p.set_shapr(2,10)</code></pre></li><li>动态形状(可以跨阶数改变,但是不能改变元素的总数)  <pre><code class="lang-python">tf.reshape(a_p,shape=[2,3,1])</code></pre><h3 id="张量的数学运算"><a href="#张量的数学运算" class="headerlink" title="张量的数学运算"></a>张量的数学运算</h3></li><li>算术运算符</li><li>基本数学函数</li><li>矩阵运算 </li><li>reduce操作  </li><li>序列索引操作  <blockquote><p>详情请参考：<br><a href="https://www.tensorflow.org/versions/r1.8/api_guides/python/math_ops" target="_blank" rel="noopener" title="需要翻墙--已不能用">API</a></p><h2 id="变量OP-用来存储模型参数"><a href="#变量OP-用来存储模型参数" class="headerlink" title="变量OP(用来存储模型参数)"></a>变量OP(用来存储模型参数)</h2><p>特点：</p></blockquote></li><li>存储持久化</li><li>可修改值</li><li>可指定被训练 <h3 id="创建变量"><a href="#创建变量" class="headerlink" title="创建变量"></a>创建变量</h3>tf.Variable(inital_value=None,trainable=True,collections=None,name=None)   </li><li>inital_value: 初始化的值   </li><li>trainable: 是否被训练  </li><li>collections: 新变量将添加到列出的图的集合中collections,默认为[GraphKeys.GLOBAL_VARIABLES],如果trainable是True变量也被添加到图形集合GraphKeys。TRAINABLE_VARIABLES</li><li>变量需要显式初始化，才能运行值    <pre><code class="lang-python">def variable_demo():#定义变量a = tf.Variable(inital_value=40)  b= tf.Variable(inital_value=50)c = tf.add(a,b)  #初始化变量init = tf.global_variables_initializer()  #开启对话  with tf.Session() as sess:  #变量初始化    sess.run(init)  print(&quot;c:\n&quot;,sess.run(c))</code></pre><h3 id="使用tf-variable-scope-修改变量的命名空间"><a href="#使用tf-variable-scope-修改变量的命名空间" class="headerlink" title="使用tf.variable_scope()修改变量的命名空间"></a>使用tf.variable_scope()修改变量的命名空间</h3>会在OP的名字前面增加命名空间的指定名字<br>``` python<br>with tf.variable_scope(“name”):<br>  var = tf.Variable(name=’var’,initial_value=[4],dtype=tf.float32)<br>  var_double = tf.Variable(name=’var’,inintaial_value=[4],dtype=tf.float32)  </li></ul><p><tf.Variable 'name/var:0' shapr=() dtype=float32_ref>  </p><p><tf.Variable 'name/var_1:0' shapr=() dtype=float32_ref><br>```  </p><h2 id="高级API"><a href="#高级API" class="headerlink" title="高级API"></a>高级API</h2><h3 id="基础API"><a href="#基础API" class="headerlink" title="基础API"></a>基础API</h3><ul><li>tf.app<blockquote><p>这个模块相当于为TensorFlow进行的脚本提供一个main函数入口，可以定义脚本运行的flags</p></blockquote></li><li>tf.image  <blockquote><p>TensorFlow的图像处理操作。主要是一些颜色变换、变形和图像的编码和解释  </p></blockquote></li><li>tf.gfile  <blockquote><p>这个模块提供了一组文件操作函数 </p></blockquote></li><li>tf.summary  <blockquote><p>用来生成TensorBoard可用的统计日志，目前summary主要提供了4种类型：audio、image、histogram、scalar</p></blockquote></li><li>tf.python_io  <blockquote><p>用来读写TFRecords  </p></blockquote></li><li>tf.train <blockquote><p>这个模块提供了一些训练器，与tf.nn组合起来，实现一些网络的优化算法  </p></blockquote></li><li>tf.nn <blockquote><p>这个模块提供了一些构建神经网络的底层函数。TensorFlow构建网络的核心模块。  </p><h3 id="高级API-1"><a href="#高级API-1" class="headerlink" title="高级API"></a>高级API</h3></blockquote></li><li>tf.keras<blockquote><p>Keras本来是一个独立的深度学习库，tensorflow将其学习过来，增加这部分模块在于快速构建模型 </p></blockquote></li><li>tf.layers<blockquote><p>高级API，以更高级的概念层来定义一个模型。类似tf.keras  </p></blockquote></li><li>td.contrib<br>tf.contrib.layers提供能将计算途中的 网络层、正则化、摘要操作，是构建计算图的高级操作，但是tf.contrib包含不稳定和实验代码，有可能以后API会改变  </li><li>tf.estimator  <blockquote><p>一个Estimator相当于Model + Training + Evaluate 的合体。在模块种，已经实现了集中简单的分类器和回归器，包括：Baseline，Learning和DNN。这里的DNN的网络，只是全连接网络，没有提供卷积之类的。</p><h1 id="数据读取、神经网络"><a href="#数据读取、神经网络" class="headerlink" title="数据读取、神经网络"></a>数据读取、神经网络</h1><h1 id="卷积神经网络"><a href="#卷积神经网络" class="headerlink" title="卷积神经网络"></a>卷积神经网络</h1></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;TensorFlow框架介绍&quot;&gt;&lt;a href=&quot;#TensorFlow框架介绍&quot; class=&quot;headerlink&quot; title=&quot;TensorFlow框架介绍&quot;&gt;&lt;/a&gt;TensorFlow框架介绍&lt;/h1&gt;&lt;h2 id=&quot;TF数据流图&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>The difference between Machine Learning and Deep Learning</title>
    <link href="http://yoursite.com/2020/02/23/The-difference-between-Machine-Learning-and-Deep-Learning/"/>
    <id>http://yoursite.com/2020/02/23/The-difference-between-Machine-Learning-and-Deep-Learning/</id>
    <published>2020-02-23T11:13:36.000Z</published>
    <updated>2020-02-23T11:46:32.336Z</updated>
    
    <content type="html"><![CDATA[<h2 id="特征值提取"><a href="#特征值提取" class="headerlink" title="特征值提取"></a>特征值提取</h2><ul><li>机器学习的<strong>特征工程步骤需要手动完成，而且需要大量领域专业只是</strong>  </li><li>深度学习<strong>通常由多个层组成，它们通常将更简单的模型组合在一起，将数据从一层传递到另一层来构建更复杂的模型。通过训练大量数据自动得出模型，不需要人工特征提取环节</strong>  <blockquote><p>深度学习算法试图从数据中学习高级功能，这是深度学习的一个非常独特的部分。因此，减少了未每个问题开发新特征提取器的任务。<strong>适合用在难提取特征的图像、语音、自然语言处理领域</strong>  </p><h2 id="数据量和计算性能要求"><a href="#数据量和计算性能要求" class="headerlink" title="数据量和计算性能要求"></a>数据量和计算性能要求</h2><p>机器学习需要执行时间远少于深度学习，深度学习参数往往很庞大，需要通过大量数据的多次优化来训练参数。<br>第一、深度学习需要大量的训练数据集<br>第二、训练深度神经网络需要大量的算力<br>可能要花费数天、甚至数周的时间，才能使用数百万张图像的数据集训练出一个深度网络。所以深度学习通常</p><ul><li>需要大量的GPU服务器来进行计算</li><li>全面管理的分布式训练与预测服务—比如<strong>谷歌TensorFlow云机器学习平台</strong>  <h2 id="算法代表"><a href="#算法代表" class="headerlink" title="算法代表"></a>算法代表</h2></li></ul></blockquote></li><li>机器学习  <blockquote><ul><li>朴素贝叶斯、决策树等  </li></ul></blockquote></li><li>深度学习  <blockquote><ul><li>神经网络</li></ul></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;特征值提取&quot;&gt;&lt;a href=&quot;#特征值提取&quot; class=&quot;headerlink&quot; title=&quot;特征值提取&quot;&gt;&lt;/a&gt;特征值提取&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;机器学习的&lt;strong&gt;特征工程步骤需要手动完成，而且需要大量领域专业只是&lt;/strong&gt;  &lt;/l
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>决策树</title>
    <link href="http://yoursite.com/2020/02/23/%E5%86%B3%E7%AD%96%E6%A0%91/"/>
    <id>http://yoursite.com/2020/02/23/%E5%86%B3%E7%AD%96%E6%A0%91/</id>
    <published>2020-02-23T00:51:01.000Z</published>
    <updated>2020-05-13T10:38:27.625Z</updated>
    
    <content type="html"><![CDATA[<h1 id="决策树-噜啦噜啦咧"><a href="#决策树-噜啦噜啦咧" class="headerlink" title="决策树(噜啦噜啦咧)"></a>决策树(噜啦噜啦咧)</h1><h2 id="问题引入（案例）"><a href="#问题引入（案例）" class="headerlink" title="问题引入（案例）"></a>问题引入（案例）</h2><p>根据电脑购买记录，对购买者建模。该模型可以基于客户的一些信息预测他是否会购买电脑  </p><div class="table-container"><table><thead><tr><th style="text-align:center">记录标识</th><th style="text-align:center">年龄</th><th style="text-align:center">收入层次</th><th style="text-align:center">是否单身</th><th style="text-align:center">信用等级</th><th style="text-align:center">是否购买电脑</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">青少年</td><td style="text-align:center">高</td><td style="text-align:center">否</td><td style="text-align:center">一般</td><td style="text-align:center">否</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">青少年</td><td style="text-align:center">高</td><td style="text-align:center">否</td><td style="text-align:center">良好</td><td style="text-align:center">否</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">中年</td><td style="text-align:center">高</td><td style="text-align:center">否</td><td style="text-align:center">一般</td><td style="text-align:center">是</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">老年</td><td style="text-align:center">中</td><td style="text-align:center">否</td><td style="text-align:center">一般</td><td style="text-align:center">是</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">老年</td><td style="text-align:center">低</td><td style="text-align:center">是</td><td style="text-align:center">一般</td><td style="text-align:center">是</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">老年</td><td style="text-align:center">低</td><td style="text-align:center">是</td><td style="text-align:center">良好</td><td style="text-align:center">否</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">中年</td><td style="text-align:center">低</td><td style="text-align:center">是</td><td style="text-align:center">良好</td><td style="text-align:center">是</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">青少年</td><td style="text-align:center">中</td><td style="text-align:center">否</td><td style="text-align:center">一般</td><td style="text-align:center">否</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">青少年</td><td style="text-align:center">低</td><td style="text-align:center">是</td><td style="text-align:center">一般</td><td style="text-align:center">是</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">老年</td><td style="text-align:center">中</td><td style="text-align:center">是</td><td style="text-align:center">一般</td><td style="text-align:center">是</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">青少年</td><td style="text-align:center">中</td><td style="text-align:center">是</td><td style="text-align:center">良好</td><td style="text-align:center">是</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">中年</td><td style="text-align:center">中</td><td style="text-align:center">否</td><td style="text-align:center">良好</td><td style="text-align:center">是</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center">中年</td><td style="text-align:center">高</td><td style="text-align:center">是</td><td style="text-align:center">一般</td><td style="text-align:center">是</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center">老年</td><td style="text-align:center">中</td><td style="text-align:center">否</td><td style="text-align:center">良好</td><td style="text-align:center">否</td></tr></tbody></table></div><h3 id="确定自变量和因变量"><a href="#确定自变量和因变量" class="headerlink" title="确定自变量和因变量"></a>确定自变量和因变量</h3><ul><li>自变量：年龄、收入层次、是否单身、信用等级</li><li>因变量：是否购买电脑<h3 id="第一级特征选择（选择当前最佳特征）"><a href="#第一级特征选择（选择当前最佳特征）" class="headerlink" title="第一级特征选择（选择当前最佳特征）"></a>第一级特征选择（选择当前最佳特征）</h3><h4 id="计算整体的熵：购买：9例，未购买：5例"><a href="#计算整体的熵：购买：9例，未购买：5例" class="headerlink" title="计算整体的熵：购买：9例，未购买：5例"></a><strong>计算整体的熵</strong>：购买：9例，未购买：5例</h4><script type="math/tex; mode=display">熵_{整体} = -\frac{5}{14}\log_2\frac{5}{14}-\frac{9}{14}\log_2\frac{9}{14} = 0.940286</script><strong>计算年龄的熵</strong>：<table>  <tr>  <th>年龄</th>  <th>年龄占比</th>  <th>是否购买</th>  <th>购买占比</th>  </tr>  <tr>  <td rowspan="2">青年</td>  <td rowspan="2">5/14</td>  <td>yes</td>  <td>2/5</td>  </tr>  <tr>  <td>no</td>  <td>3/5</td>  </tr>  <tr>  <td rowspan="2">中年</td>  <td rowspan="2">4/14</td>  <td>yes</td>  <td>4/4</td>  </tr>  <tr>  <td>no</td>  <td>0/4</td>  </tr>  <tr>  <td rowspan="2">青年</td>  <td rowspan="2">5/14</td>  <td>yes</td>  <td>3/5</td>  </tr>  <tr>  <td>no</td>  <td>2/5</td>  </tr></table>    </li></ul><script type="math/tex; mode=display">熵_{年龄} = -\frac{5}{14}(-\frac{3}{5}\log_2\frac{3}{5}-\frac{2}{5}\log_2\frac{2}{5})+\frac{4}{14}(-\frac{4}{4}\log_2\frac{0}{4}-\frac{2}{5}\log_2\frac{2}{5})+\frac{5}{14}(-\frac{3}{5}\log_2\frac{3}{5}-\frac{2}{5}\log_2\frac{2}{5}) = 0.694</script><p><strong>计算收入的熵</strong>：</p><script type="math/tex; mode=display">熵_{收入} = 0.911</script><p><strong>计算单身的熵</strong>：</p><script type="math/tex; mode=display">熵_{是否单身} = 0.788</script><p><strong>计算信用的熵</strong>：</p><script type="math/tex; mode=display">熵_{信用等级} = 0.892</script><h4 id="计算信息增益"><a href="#计算信息增益" class="headerlink" title="计算信息增益"></a>计算信息增益</h4><div class="table-container"><table><thead><tr><th style="text-align:center">特征</th><th style="text-align:center">特征熵</th><th style="text-align:center">信息增益</th></tr></thead><tbody><tr><td style="text-align:center">年龄</td><td style="text-align:center">0.694</td><td style="text-align:center">0.246</td></tr><tr><td style="text-align:center">收入</td><td style="text-align:center">0.911</td><td style="text-align:center">0.029</td></tr><tr><td style="text-align:center">单身</td><td style="text-align:center">0.788</td><td style="text-align:center">0.152</td></tr><tr><td style="text-align:center">信用</td><td style="text-align:center">0.892</td><td style="text-align:center">0.048</td></tr></tbody></table></div><blockquote><p>因为年龄的信息增益最大，所以选择年龄作为<strong>第一级特征选择</strong></p></blockquote><h3 id="按照取值产生分支"><a href="#按照取值产生分支" class="headerlink" title="按照取值产生分支"></a>按照取值产生分支</h3><h4 id="第一层分支"><a href="#第一层分支" class="headerlink" title="第一层分支"></a>第一层分支</h4><p><img src="\picture\one.png" alt="第一层分支"></p><h4 id="第二级特征选择"><a href="#第二级特征选择" class="headerlink" title="第二级特征选择"></a>第二级特征选择</h4><p><img src="\picture\two_one.png" alt="青年"><br><img src="\picture\two_two.png" alt="中年"><br><img src="\picture\two_three.png" alt="老年"></p><h3 id="生成处理结果"><a href="#生成处理结果" class="headerlink" title="生成处理结果"></a>生成处理结果</h3><p><img src="\picture\result.png" alt="决策树"></p><h1 id="ID3系列算法"><a href="#ID3系列算法" class="headerlink" title="ID3系列算法"></a>ID3系列算法</h1><h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1.准备工作"></a>1.准备工作</h2><h3 id="观察数据，明确自变量和因变量"><a href="#观察数据，明确自变量和因变量" class="headerlink" title="观察数据，明确自变量和因变量"></a>观察数据，明确自变量和因变量</h3><h3 id="明确信息度量的方式"><a href="#明确信息度量的方式" class="headerlink" title="明确信息度量的方式"></a>明确信息度量的方式</h3><ul><li>熵<h5 id="信息熵："><a href="#信息熵：" class="headerlink" title="信息熵："></a>信息熵：</h5><ul><li>信息论中的概念，香农提出  </li><li>描述混乱程度的度量  </li><li>取值范围0~1，值越大，越混乱  </li><li>计算公式：<script type="math/tex">H(U) = E\{-\log p_i\} = - \sum_{i=1}^n p_i\log p_i</script>  </li></ul></li><li>基尼系数<h3 id="确定分支终止条件"><a href="#确定分支终止条件" class="headerlink" title="确定分支终止条件"></a>确定分支终止条件</h3></li><li>纯度</li><li>记录条数</li><li>循环次数等  <h2 id="2-选择特征"><a href="#2-选择特征" class="headerlink" title="2.选择特征"></a>2.选择特征</h2>得到当前待处理子集，计算所有特征信息度量，得到当前最佳分类特征  <h3 id="信息增益和特征选择"><a href="#信息增益和特征选择" class="headerlink" title="信息增益和特征选择"></a>信息增益和特征选择</h3><h4 id="信息增益："><a href="#信息增益：" class="headerlink" title="信息增益："></a>信息增益：</h4></li><li>信息是确定性的增加  </li><li>从一个状态到另一个状态信息的变化  </li><li>信息增益越大，对确定性贡献越大  </li></ul><p>计算整体的熵、基于特征1、2、3….n的熵<br>计算特征1、2、3….n的信息增益（整体的熵-特征熵）<br>得到当前最佳特征<br>根据当前最佳特征产生分支<br><img src="\picture\menu.png" alt="menu"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">st&#x3D;&gt;start: 开始框</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">A&#x3D;&gt;operation: 选择当前最佳特征</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">B&#x3D;&gt;operation: 按照取值产生分支</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">C&#x3D;&gt;condition: 满足分支终止条件 </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">D&#x3D;&gt;condition: 是否有待处理分支  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">E&#x3D;&gt;operation: 产生处理结果</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">e&#x3D;&gt;end: 结束</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">st-&gt;A-&gt;B-&gt;C</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">C(no)-&gt;A  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">C(yes)-&gt;D  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">D(no)-&gt;E</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">D(yes,right)-&gt;A  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">E-&gt;e(down)</span></pre></td></tr></table></figure><h2 id="3-创建分支"><a href="#3-创建分支" class="headerlink" title="3.创建分支"></a>3.创建分支</h2><p>根据选中特征将当前记录分成不同分支，分支个数取决于算法  </p><h2 id="4-是否终止"><a href="#4-是否终止" class="headerlink" title="4.是否终止"></a>4.是否终止</h2><p>判断是否满足终止条件，满足则退出循环，不满足则继续递归调用（返回2）   </p><h2 id="5-生成结果"><a href="#5-生成结果" class="headerlink" title="5.生成结果"></a>5.生成结果</h2><p>判断是否需要剪枝，需要则进行适当修剪，不需要则为最终结果  </p><h2 id="ID3（Iterative-Dichotomiser-3，迭代树三代）"><a href="#ID3（Iterative-Dichotomiser-3，迭代树三代）" class="headerlink" title="ID3（Iterative Dichotomiser 3，迭代树三代）"></a>ID3（Iterative Dichotomiser 3，迭代树三代）</h2><ul><li>核心是信息熵，根据<strong>信息增益</strong>决定树的节点  </li><li>存在以下问题：  <blockquote><p>信息度量不合理：倾向于选择取值过多的字段<br>输入类型单一： 离散型<br>不做剪枝，容易过拟合  </p><h2 id="C4-5：和ID3相比的改进："><a href="#C4-5：和ID3相比的改进：" class="headerlink" title="C4.5：和ID3相比的改进："></a>C4.5：和ID3相比的改进：</h2></blockquote></li><li>用信息增益率代替信息增益  </li><li>能对连续属性进行离散化，对不完整数据进行处理 </li><li>进行剪枝<br>C50：C4.5相比的改进：</li><li>使用了boosting  </li><li>前修剪，后修剪  </li></ul><h1 id="CART-Classfication-and-Regression-Tree"><a href="#CART-Classfication-and-Regression-Tree" class="headerlink" title="CART(Classfication and Regression Tree)"></a>CART(Classfication and Regression Tree)</h1><ul><li>核心是基尼系数（Gini） </li><li>分类是二叉树  </li><li>支持连续值和离散值  </li><li>后剪枝进行修剪  </li><li>支持回归，可以预测连续值  </li></ul><h1 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h1><div class="table-container"><table><thead><tr><th style="text-align:center">算法</th><th style="text-align:center">支持模型</th><th style="text-align:center">树结构</th><th style="text-align:center">特征选择</th><th style="text-align:center">连续值处理</th><th style="text-align:center">缺省值处理</th><th style="text-align:center">剪枝</th></tr></thead><tbody><tr><td style="text-align:center">ID3</td><td style="text-align:center">分类</td><td style="text-align:center">多叉树</td><td style="text-align:center">信息增益</td><td style="text-align:center">不支持</td><td style="text-align:center">不支持</td><td style="text-align:center">不支持</td></tr><tr><td style="text-align:center">C4.5</td><td style="text-align:center">分类</td><td style="text-align:center">多叉树</td><td style="text-align:center">信息增益比</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td></tr><tr><td style="text-align:center">CART</td><td style="text-align:center">分类、回归</td><td style="text-align:center">二叉树</td><td style="text-align:center">基尼系数</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td></tr></tbody></table></div><h1 id="常见有监督学习算法"><a href="#常见有监督学习算法" class="headerlink" title="常见有监督学习算法"></a>常见有监督学习算法</h1><h2 id="分类算法："><a href="#分类算法：" class="headerlink" title="分类算法："></a>分类算法：</h2><ul><li>KNN（K最近邻，K——Nearest Neighbor）</li><li>NB（朴素贝叶斯，Naive Bayes）</li><li>DT（决策树，Decision Tree）：C45、CART  </li><li>SVM（支持向量机，Support Vector Machine）</li><li>…… <h2 id="回归预测"><a href="#回归预测" class="headerlink" title="回归预测"></a>回归预测</h2></li><li>线性回归（Linear Regression）</li><li>逻辑回归（Logistic Regression）</li><li>岭回归（Ridge Regression）</li><li>拉索回归（LASSO Regression）</li><li>……   <h1 id="常见无监督学习算法"><a href="#常见无监督学习算法" class="headerlink" title="常见无监督学习算法"></a>常见无监督学习算法</h1><h2 id="聚类算法："><a href="#聚类算法：" class="headerlink" title="聚类算法："></a>聚类算法：</h2></li><li>K均值（K-Means） </li><li>DBScan</li><li>最大期望（EM：Expectation Maximization）</li><li>降维：PCA（主成分分析）、PLS（偏最小二乘回归）、MDS（多维尺度分析）…</li><li>……<h2 id="关联规则："><a href="#关联规则：" class="headerlink" title="关联规则："></a>关联规则：</h2></li><li>Apriori </li><li>Eclat </li><li>……  <h1 id="其他学习："><a href="#其他学习：" class="headerlink" title="其他学习："></a>其他学习：</h1><h2 id="半监督学习："><a href="#半监督学习：" class="headerlink" title="半监督学习："></a>半监督学习：</h2></li><li>半监督分类</li><li>半监督回归</li><li>半监督聚类</li><li>半监督降维 <h2 id="集成学习：针对同一数据集，训练多种学习器，来解决同一问题"><a href="#集成学习：针对同一数据集，训练多种学习器，来解决同一问题" class="headerlink" title="集成学习：针对同一数据集，训练多种学习器，来解决同一问题"></a>集成学习：针对同一数据集，训练多种学习器，来解决同一问题</h2><h3 id="Bagging："><a href="#Bagging：" class="headerlink" title="Bagging："></a>Bagging：</h3></li><li>有放回抽样构建多个子集</li><li>训练多个分类器</li><li>最终结果由各分类器结果投票得出</li><li>实现非常简单<h3 id="Boosting："><a href="#Boosting：" class="headerlink" title="Boosting："></a>Boosting：</h3></li><li>重复使用一类学习器赖修改训练集</li><li>每次训练后根据结果调整样本的权重</li><li>每个学习器加权后的线性组合即为最终结果<h3 id="Stacking："><a href="#Stacking：" class="headerlink" title="Stacking："></a>Stacking：</h3></li><li>由两级组成，第一级为初级学习器，第二级为高基学习器</li><li>第一级学习器的输出作为第二级学习器的输入  <h2 id="随机森林：RandomForest"><a href="#随机森林：RandomForest" class="headerlink" title="随机森林：RandomForest"></a>随机森林：RandomForest</h2></li><li>由许多决策树组成，树生成时采用了随机的方法</li><li>Smart Bagging </li><li>生成步骤：<blockquote><p>随机采样，生成多个样本集<br>对每个样本集构建决策树  </p></blockquote></li><li>优点：<blockquote><p>可以处理多分类<br>减少过拟合的概率<br>容易实现并行<br>对数据集容错能力强  </p><h2 id="深度学习"><a href="#深度学习" class="headerlink" title="深度学习"></a>深度学习</h2><p><strong>深度学习</strong>：深度学习的概念源于对人工神经网络的研究。含多隐层的多层感知器就是一种深度学习结构。深度学习通过组合低层特征形成更加抽象的高层标识属性类别或特征，以发现数据的分布式特征标识。属于机器学习研究中的一个心得领域，其动机在于建立、模拟人脑进行分析学习的神经网络，它模拟人脑的机制来解释数据，例如图像，声音和文本<br>常见深度学习算法：</p></blockquote></li><li>受限玻尔兹曼机 Restricted Boltxmann Machine（RBM）</li><li>深度信你那网络 Deep Belief Networks（DBN）</li><li>卷积网络 Convolutional Network</li><li>栈式自编码 Stacked Auto-encoders <h2 id="增强学习：Reinforcement-Learning"><a href="#增强学习：Reinforcement-Learning" class="headerlink" title="增强学习：Reinforcement Learning"></a>增强学习：Reinforcement Learning</h2><blockquote><p><strong>增强学习</strong>要解决的问题是：一个能感知环境的自治agent，通过学习，选择能达到其目标的最优动作。本质就是解决“决策（decision making）”问题，即学会自动进行决策比如控制移动及机器人、在工厂中学习最优操作工序、学习棋类对弈等。<br>常见增强学习算法：</p></blockquote></li><li>Q-Learning</li><li>时间差学习 Temporal difference learning  <h2 id="迁移迁移：Transfer-Learning"><a href="#迁移迁移：Transfer-Learning" class="headerlink" title="迁移迁移：Transfer Learning"></a>迁移迁移：Transfer Learning</h2><blockquote><p><strong>迁移学习</strong>是把已训练好的模型参数迁移到心得模型来帮助新模型训练数据集。初中时节省人工标记样本的时间，让模型可以通过已有的标记数据向未标记数据迁移。换言之，就是运用已有的只是来学习新的知识，核心时找到已有知识和新知识之间的相似性。</p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;决策树-噜啦噜啦咧&quot;&gt;&lt;a href=&quot;#决策树-噜啦噜啦咧&quot; class=&quot;headerlink&quot; title=&quot;决策树(噜啦噜啦咧)&quot;&gt;&lt;/a&gt;决策树(噜啦噜啦咧)&lt;/h1&gt;&lt;h2 id=&quot;问题引入（案例）&quot;&gt;&lt;a href=&quot;#问题引入（案例）&quot; class
      
    
    </summary>
    
    
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>二维图形生成</title>
    <link href="http://yoursite.com/2020/02/22/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%BD%A2%E7%94%9F%E6%88%90/"/>
    <id>http://yoursite.com/2020/02/22/%E4%BA%8C%E7%BB%B4%E5%9B%BE%E5%BD%A2%E7%94%9F%E6%88%90/</id>
    <published>2020-02-22T07:09:10.000Z</published>
    <updated>2020-02-23T11:46:49.605Z</updated>
    
    <content type="html"><![CDATA[<h2 id="区域填充"><a href="#区域填充" class="headerlink" title="区域填充"></a>区域填充</h2><blockquote><p>多边形区域表示方法：点阵表示和顶点表示  </p><p>点阵表示：用内部像素集合表示，主要填充算法：种子填充类算法  </p><p>顶点表示：用顶点序列表示：主要填充算法：扫描类算法  </p></blockquote><h4 id="点阵式区域的填充算法"><a href="#点阵式区域的填充算法" class="headerlink" title="点阵式区域的填充算法"></a>点阵式区域的填充算法</h4><h5 id="边界定义的区域-边界填充算法"><a href="#边界定义的区域-边界填充算法" class="headerlink" title="边界定义的区域-边界填充算法"></a>边界定义的区域-边界填充算法</h5><h5 id="内定义的区域-漫水法"><a href="#内定义的区域-漫水法" class="headerlink" title="内定义的区域-漫水法"></a>内定义的区域-漫水法</h5><h3 id="种子填充算法"><a href="#种子填充算法" class="headerlink" title="种子填充算法"></a>种子填充算法</h3><h4 id="简单的种子填充算法-漫水法"><a href="#简单的种子填充算法-漫水法" class="headerlink" title="简单的种子填充算法-漫水法"></a>简单的种子填充算法-漫水法</h4><h5 id="内部表示区域种子填充算法"><a href="#内部表示区域种子填充算法" class="headerlink" title="内部表示区域种子填充算法"></a>内部表示区域种子填充算法</h5><h5 id="边界表示区域种子填充算法"><a href="#边界表示区域种子填充算法" class="headerlink" title="边界表示区域种子填充算法"></a>边界表示区域种子填充算法</h5><h4 id="扫描线种子填充算法"><a href="#扫描线种子填充算法" class="headerlink" title="扫描线种子填充算法"></a>扫描线种子填充算法</h4><h3 id="多边形填充算法"><a href="#多边形填充算法" class="headerlink" title="多边形填充算法"></a>多边形填充算法</h3><h4 id="多边形包含性测试算法"><a href="#多边形包含性测试算法" class="headerlink" title="多边形包含性测试算法"></a>多边形包含性测试算法</h4><h5 id="射线法"><a href="#射线法" class="headerlink" title="射线法"></a>射线法</h5><blockquote><p>奇异点处理：</p><ul><li>在极值点处，按两个交点计算  </li><li>在非极值点处，按一个交点计算  </li></ul><p>实际计算前，奇异点（非极值点）的预处理   </p><ul><li>将扫描线上方线段阶段一个单位，这样扫描线就只与多边形有一个交点  </li></ul></blockquote><h5 id="弧长法"><a href="#弧长法" class="headerlink" title="弧长法"></a>弧长法</h5><h4 id="多边形扫描转换算法"><a href="#多边形扫描转换算法" class="headerlink" title="多边形扫描转换算法"></a>多边形扫描转换算法</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;区域填充&quot;&gt;&lt;a href=&quot;#区域填充&quot; class=&quot;headerlink&quot; title=&quot;区域填充&quot;&gt;&lt;/a&gt;区域填充&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;多边形区域表示方法：点阵表示和顶点表示  &lt;/p&gt;
&lt;p&gt;点阵表示：用内部像素集合表示，主要填充算
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>计算机网络</title>
    <link href="http://yoursite.com/2020/02/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    <id>http://yoursite.com/2020/02/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</id>
    <published>2020-02-18T06:14:34.000Z</published>
    <updated>2020-02-21T06:07:37.686Z</updated>
    
    <content type="html"><![CDATA[<h2 id="专业术语："><a href="#专业术语：" class="headerlink" title="专业术语："></a>专业术语：</h2><blockquote><p>PSTN:公用电话交换网（电话网）<br>transceiver:收发器<br>Line controller:线路控制器<br>FEP：前端处理机<br>concentrator:集中器   </p><p>三网：电信网、有线电视网、计算机网络<br>报文：要发送的整块数据<br>三种数据交换方式：电路交换、报文交换、分组交换</p></blockquote><h3 id="分组交换"><a href="#分组交换" class="headerlink" title="分组交换"></a>分组交换</h3><p>分组也叫包，分组的首部也叫包头  </p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ul><li>采用存储转发技术  </li><li>发送数据前对数据进行分段处理     <h4 id="分组交换网的组成"><a href="#分组交换网的组成" class="headerlink" title="分组交换网的组成"></a>分组交换网的组成</h4></li><li>主机（host）</li><li>节点交换器（node switch）<blockquote><ul><li>路由器  <h4 id="分组交换的优点"><a href="#分组交换的优点" class="headerlink" title="分组交换的优点"></a>分组交换的优点</h4></li></ul></blockquote></li><li>高效：逐段占用通信链路，动态分配传输带宽  </li><li>灵活：智能节点能够独立处理数据分发  </li><li>迅速：分组作为传输单位，无需建立链接  </li><li>可靠：完善的网络协议  <h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4></li><li>传输时延  </li><li>首部数据存在开销   </li></ul><h3 id="计算机网络分类"><a href="#计算机网络分类" class="headerlink" title="计算机网络分类"></a>计算机网络分类</h3><h4 id="按网络的作用范围："><a href="#按网络的作用范围：" class="headerlink" title="按网络的作用范围："></a>按网络的作用范围：</h4><ul><li>广域网（Wide Area Network）  </li><li>局域网（Local Area Network）  </li><li>城域网（Metropolitan Area Network）  </li><li>个人局域网（Personal Area Network）<h4 id="按使用者分类"><a href="#按使用者分类" class="headerlink" title="按使用者分类"></a>按使用者分类</h4></li><li>公用网  </li><li>专用网  <h4 id="按拓扑结构分类"><a href="#按拓扑结构分类" class="headerlink" title="按拓扑结构分类"></a>按拓扑结构分类</h4></li><li>星型、总线型、环型、树型、网状  <h4 id="交换方式"><a href="#交换方式" class="headerlink" title="交换方式"></a>交换方式</h4></li><li>电路交换网  </li><li>报文交换网  </li><li>分组交换网  <h4 id="交换方式-1"><a href="#交换方式-1" class="headerlink" title="交换方式"></a>交换方式</h4></li><li>电路交换网  </li><li>报文交换网  </li><li>分组交换网  <h4 id="工作方式"><a href="#工作方式" class="headerlink" title="工作方式"></a>工作方式</h4></li><li>资源子网  </li><li>通信子网  </li><li>接入网  </li></ul><h3 id="计算机网络的性能"><a href="#计算机网络的性能" class="headerlink" title="计算机网络的性能"></a>计算机网络的性能</h3><h4 id="速率"><a href="#速率" class="headerlink" title="速率"></a>速率</h4><blockquote><p>主机在数字信道上传送数据位数的速率，也称data rate或bit rate  单位：b/s,kb/s,Mb/s,Gb/s  </p><h4 id="带宽"><a href="#带宽" class="headerlink" title="带宽"></a>带宽</h4><p>数字信道所能传送的最高数据率，单位：b/s,kb/s,Mb/s,Gb/s  </p><h4 id="吞吐量"><a href="#吞吐量" class="headerlink" title="吞吐量"></a>吞吐量</h4><p>单位时间内通过某个网络的数据量  </p><h4 id="时延"><a href="#时延" class="headerlink" title="时延"></a>时延</h4><ul><li>发送时延  发送时延 = 数据块长度（比特）/信道带宽（比特/秒）</li><li>传播时延  </li><li>处理时延  </li><li>排队时延  <h4 id="时延带宽积"><a href="#时延带宽积" class="headerlink" title="时延带宽积"></a>时延带宽积</h4><h4 id="往返时间"><a href="#往返时间" class="headerlink" title="往返时间"></a>往返时间</h4><h4 id="利用率"><a href="#利用率" class="headerlink" title="利用率"></a>利用率</h4></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;专业术语：&quot;&gt;&lt;a href=&quot;#专业术语：&quot; class=&quot;headerlink&quot; title=&quot;专业术语：&quot;&gt;&lt;/a&gt;专业术语：&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;PSTN:公用电话交换网（电话网）&lt;br&gt;transceiver:收发器&lt;br&gt;Line 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>ECS安装NGINX</title>
    <link href="http://yoursite.com/2020/02/16/ECS%E5%AE%89%E8%A3%85NGINX/"/>
    <id>http://yoursite.com/2020/02/16/ECS%E5%AE%89%E8%A3%85NGINX/</id>
    <published>2020-02-16T07:25:19.000Z</published>
    <updated>2020-02-16T08:30:42.119Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装nginx依赖环境"><a href="#安装nginx依赖环境" class="headerlink" title="安装nginx依赖环境"></a>安装nginx依赖环境</h2><h3 id="gcc-安装过程一律选y"><a href="#gcc-安装过程一律选y" class="headerlink" title="gcc(安装过程一律选y)"></a>gcc(安装过程一律选y)</h3><pre><code>mv apache-tomcat-9.0.31/ tomcat9</code></pre><h3 id="pcre-zlib-openssl"><a href="#pcre-zlib-openssl" class="headerlink" title="pcre/zlib/openssl"></a>pcre/zlib/openssl</h3><pre><code>yum -y install pcre pcrer-develyum -y install zlib zlib-develyum -y install openssl openssl-devel</code></pre><h2 id="官网下载NGINX"><a href="#官网下载NGINX" class="headerlink" title="官网下载NGINX"></a>官网下载NGINX</h2><p><a href="http://nginx.org/en/download.html" target="_blank" rel="noopener" title="NGINX下载">NGINX下载地址官网</a></p><h2 id="将jdk安装到指定目录（可以自定义）"><a href="#将jdk安装到指定目录（可以自定义）" class="headerlink" title="将jdk安装到指定目录（可以自定义）"></a>将jdk安装到指定目录（可以自定义）</h2><h3 id="上传到服务器-usr-local下"><a href="#上传到服务器-usr-local下" class="headerlink" title="上传到服务器 /usr/local下"></a>上传到服务器 /usr/local下</h3><p>这里利用 SSH Secure File Transfer Client 上传</p><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><pre><code>tar -xzvf nginx-1.17.8.tar.gz</code></pre><p>这里就可以把压缩包删掉了</p><h3 id="改名（方便书写和更改）"><a href="#改名（方便书写和更改）" class="headerlink" title="改名（方便书写和更改）"></a>改名（方便书写和更改）</h3><pre><code>mv nginx-1.17.8/ nginx8</code></pre><h2 id="安装NGINX"><a href="#安装NGINX" class="headerlink" title="安装NGINX"></a>安装NGINX</h2><h3 id="编译并安装"><a href="#编译并安装" class="headerlink" title="编译并安装"></a>编译并安装</h3><pre><code>cd nginx8  ./configure  makemake install</code></pre><p>退回上级目录  </p><pre><code>cd ..</code></pre><p>会发现生成了编译好的nginx文件，同级目录下的nginx8是安装目录，启动、配置、停止使用的是编译好的nginx文件</p><h3 id="开放LINUX的对外访问的端口80（默认情况下，LINUX不会开放）"><a href="#开放LINUX的对外访问的端口80（默认情况下，LINUX不会开放）" class="headerlink" title="开放LINUX的对外访问的端口80（默认情况下，LINUX不会开放）"></a>开放LINUX的对外访问的端口80（默认情况下，LINUX不会开放）</h3><pre><code>/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT</code></pre><h2 id="检验成功安装"><a href="#检验成功安装" class="headerlink" title="检验成功安装"></a>检验成功安装</h2><pre><code>cd /usr/local/nginx/sbin  ./nginx</code></pre><p>在网页地址栏输入  公网:80<br>如果能正确显示nginx的欢迎网页，即为安装成功  </p><h2 id="关闭nginx"><a href="#关闭nginx" class="headerlink" title="关闭nginx"></a>关闭nginx</h2><pre><code>./nginx -s stop</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装nginx依赖环境&quot;&gt;&lt;a href=&quot;#安装nginx依赖环境&quot; class=&quot;headerlink&quot; title=&quot;安装nginx依赖环境&quot;&gt;&lt;/a&gt;安装nginx依赖环境&lt;/h2&gt;&lt;h3 id=&quot;gcc-安装过程一律选y&quot;&gt;&lt;a href=&quot;#gcc-安
      
    
    </summary>
    
    
    
      <category term="ECS" scheme="http://yoursite.com/tags/ECS/"/>
    
      <category term="LINUX" scheme="http://yoursite.com/tags/LINUX/"/>
    
      <category term="NGINX" scheme="http://yoursite.com/tags/NGINX/"/>
    
  </entry>
  
  <entry>
    <title>ECS安装TOMCAT</title>
    <link href="http://yoursite.com/2020/02/16/ECS%E5%AE%89%E8%A3%85TOMCAT/"/>
    <id>http://yoursite.com/2020/02/16/ECS%E5%AE%89%E8%A3%85TOMCAT/</id>
    <published>2020-02-16T07:13:32.000Z</published>
    <updated>2020-02-16T07:56:26.031Z</updated>
    
    <content type="html"><![CDATA[<h2 id="官网下载TOMCAT"><a href="#官网下载TOMCAT" class="headerlink" title="官网下载TOMCAT"></a>官网下载TOMCAT</h2><p><a href="https://tomcat.apache.org/download-90.cgi" target="_blank" rel="noopener" title="TOMCAT9下载">TOMCAT下载地址官网</a></p><h2 id="将jdk安装到指定目录（可以自定义）"><a href="#将jdk安装到指定目录（可以自定义）" class="headerlink" title="将jdk安装到指定目录（可以自定义）"></a>将jdk安装到指定目录（可以自定义）</h2><h3 id="上传到服务器-usr-local下"><a href="#上传到服务器-usr-local下" class="headerlink" title="上传到服务器 /usr/local下"></a>上传到服务器 /usr/local下</h3><p>这里利用 SSH Secure File Transfer Client 上传</p><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><pre><code>tar -xzvf apache-tomcat-9.0.31.tar.gz</code></pre><p>这里就可以把压缩包删掉了</p><h3 id="改名（方便书写和更改）"><a href="#改名（方便书写和更改）" class="headerlink" title="改名（方便书写和更改）"></a>改名（方便书写和更改）</h3><pre><code>mv apache-tomcat-9.0.31/ tomcat9</code></pre><h2 id="开放LINUX的对外访问的端口8080（默认情况下，LINUX不会开放）"><a href="#开放LINUX的对外访问的端口8080（默认情况下，LINUX不会开放）" class="headerlink" title="开放LINUX的对外访问的端口8080（默认情况下，LINUX不会开放）"></a>开放LINUX的对外访问的端口8080（默认情况下，LINUX不会开放）</h2><pre><code>/sbin/iptables -I INPUT -p tcp --dport 8080 -j ACCEPT</code></pre><h2 id="检验TOMCAT是否能用"><a href="#检验TOMCAT是否能用" class="headerlink" title="检验TOMCAT是否能用"></a>检验TOMCAT是否能用</h2><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><pre><code>cd tomcat9/bin  ./stratup.sh</code></pre><h3 id="到网页中查看"><a href="#到网页中查看" class="headerlink" title="到网页中查看"></a>到网页中查看</h3><p>在网页地址栏输入  公网:8080<br>如果能正确显示tomcat的网页，即为安装成功  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;官网下载TOMCAT&quot;&gt;&lt;a href=&quot;#官网下载TOMCAT&quot; class=&quot;headerlink&quot; title=&quot;官网下载TOMCAT&quot;&gt;&lt;/a&gt;官网下载TOMCAT&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://tomcat.apache.org/dow
      
    
    </summary>
    
    
    
      <category term="ECS" scheme="http://yoursite.com/tags/ECS/"/>
    
      <category term="LINUX" scheme="http://yoursite.com/tags/LINUX/"/>
    
      <category term="TOMCAT" scheme="http://yoursite.com/tags/TOMCAT/"/>
    
  </entry>
  
  <entry>
    <title>ECS安装JDK</title>
    <link href="http://yoursite.com/2020/02/16/ECS%E5%AE%89%E8%A3%85JDK/"/>
    <id>http://yoursite.com/2020/02/16/ECS%E5%AE%89%E8%A3%85JDK/</id>
    <published>2020-02-16T01:32:35.000Z</published>
    <updated>2020-02-16T08:03:51.050Z</updated>
    
    <content type="html"><![CDATA[<h2 id="官网下载JDK"><a href="#官网下载JDK" class="headerlink" title="官网下载JDK"></a>官网下载JDK</h2><p><a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener" title="JKD下载">JDK下载地址官网</a></p><h2 id="将jdk安装到指定目录（可以自定义）"><a href="#将jdk安装到指定目录（可以自定义）" class="headerlink" title="将jdk安装到指定目录（可以自定义）"></a>将jdk安装到指定目录（可以自定义）</h2><h3 id="上传到服务器-usr-local下"><a href="#上传到服务器-usr-local下" class="headerlink" title="上传到服务器 /usr/local下"></a>上传到服务器 /usr/local下</h3><p>这里利用 SSH Secure File Transfer Client 上传</p><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><pre><code>tar -zxvf jdk-8u241-linux-x64.tar.gz</code></pre><p>这里就可以把压缩包删掉了</p><h3 id="改名（方便书写和更改环境变量）"><a href="#改名（方便书写和更改环境变量）" class="headerlink" title="改名（方便书写和更改环境变量）"></a>改名（方便书写和更改环境变量）</h3><pre><code> mv jdk1.8.0_241/ jdk8</code></pre><h2 id="写入环境变量"><a href="#写入环境变量" class="headerlink" title="写入环境变量"></a>写入环境变量</h2><p>命令：  </p><pre><code>vim /etc/profile</code></pre><h3 id="按-i-进入编辑模式，输入下面内容"><a href="#按-i-进入编辑模式，输入下面内容" class="headerlink" title="按 i 进入编辑模式，输入下面内容"></a>按 i 进入编辑模式，输入下面内容</h3><pre><code>JAVA_HOME=/usr/local/jdk8CLASSPATH=$JAVA_HOME/lib/PATH=$PATH:$JAVA_HOME/binexport PATH JAVA_HOME CLASSPATH</code></pre><h3 id="按-shift-：键，输入wq退出文档"><a href="#按-shift-：键，输入wq退出文档" class="headerlink" title="按 shift+ ：键，输入wq退出文档"></a>按 shift+ ：键，输入wq退出文档</h3><h2 id="重启配置文档"><a href="#重启配置文档" class="headerlink" title="重启配置文档"></a>重启配置文档</h2><pre><code>source /etc/profile</code></pre><h2 id="检查是否安装完毕"><a href="#检查是否安装完毕" class="headerlink" title="检查是否安装完毕"></a>检查是否安装完毕</h2><pre><code>java -version</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;官网下载JDK&quot;&gt;&lt;a href=&quot;#官网下载JDK&quot; class=&quot;headerlink&quot; title=&quot;官网下载JDK&quot;&gt;&lt;/a&gt;官网下载JDK&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.oracle.com/technetwork/java/j
      
    
    </summary>
    
    
    
      <category term="ECS" scheme="http://yoursite.com/tags/ECS/"/>
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="centOS" scheme="http://yoursite.com/tags/centOS/"/>
    
  </entry>
  
  <entry>
    <title>nc2csv</title>
    <link href="http://yoursite.com/2020/02/15/nc2csv/"/>
    <id>http://yoursite.com/2020/02/15/nc2csv/</id>
    <published>2020-02-15T11:34:53.000Z</published>
    <updated>2020-02-21T06:07:50.957Z</updated>
    
    <content type="html"><![CDATA[<h2 id="提前概要"><a href="#提前概要" class="headerlink" title="提前概要"></a>提前概要</h2><p>在2020年2月14日与队友讨论A题过程中需要查找苏格兰海域温度变化，因此第一次接触到气象数据netCDF(.nc)格式文件，在这里以北京大学所录数据，即比赛过程中所使用的数据为例，记录对这个格式文件的处理。基本思路是利用Python中xarray库处理，再将提取到的数据存储为csv格式文件。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>推荐使用conda安装：  </p><pre><code>conda install xarray</code></pre><p>在安装过程中出现faild信息，最后采用修改清华镜像解决</p><h2 id="引入包"><a href="#引入包" class="headerlink" title="引入包"></a>引入包</h2><pre><code class="lang-python">import xarray as xrimport csv</code></pre><h2 id="数据读取"><a href="#数据读取" class="headerlink" title="数据读取"></a>数据读取</h2><pre><code class="lang-python">data = xr.open_dataset(&#39;ERsst.mnmean.nc&#39;)</code></pre><blockquote><p>读取到的数据：<br>```  </p><p><xarray.Dataset><br>Dimensions:    (lat: 89, lon: 180, nbnds: 2, time: 1973)<br>Coordinates:</p><ul><li>lat        (lat) float32 88.0 86.0 84.0 82.0 … -82.0 -84.0 -86.0 -88.0</li><li>lon        (lon) float32 0.0 2.0 4.0 6.0 8.0 … 352.0 354.0 356.0 358.0</li><li>time       (time) datetime64[ns] 1854-01-01 1854-02-01 … 2018-05-01<br>Dimensions without coordinates: nbnds<br>Data variables:<br>time_bnds  (time, nbnds) float64 …<br>sst        (time, lat, lon) float32 …<br>Attributes:<br>climatology:               Climatology is based on 1971-2000 SST, Xue, Y….<br>description:               In situ data: ICOADS2.5 before 2007 and NCEP i…<br>keywords_vocabulary:       NASA Global Change Master Directory (GCMD) Sci…<br>keywords:                  Earth Science &gt; Oceans &gt; Ocean Temperature &gt; S…<br>instrument:                Conventional thermometers<br>source_comment:            SSTs were observed by conventional thermometer…<br>geospatial_lon_min:        -1.0<br>geospatial_lon_max:        359.0<br>geospatial_laty_max:       89.0<br>geospatial_laty_min:       -89.0<br>geospatial_lat_max:        89.0<br>geospatial_lat_min:        -89.0<br>geospatial_lat_units:      degrees_north<br>geospatial_lon_units:      degrees_east<br>cdm_data_type:             Grid<br>project:                   NOAA Extended Reconstructed Sea Surface Temper…<br>original_publisher_url:    <a href="http://www.ncdc.noaa.gov" target="_blank" rel="noopener">http://www.ncdc.noaa.gov</a><br>References:                <a href="https://www.ncdc.noaa.gov/data-access/marineoc" target="_blank" rel="noopener">https://www.ncdc.noaa.gov/data-access/marineoc</a>…<br>source:                    In situ data: ICOADS R3.0 before 2015, NCEP in…<br>title:                     NOAA ERSSTv5 (in situ only)<br>history:                   created 07/2017 by PSD data using NCEI’s ERSST…<br>institution:               This version written at NOAA/ESRL PSD: obtaine…<br>citation:                  Huang et al, 2017: Extended Reconstructed Sea …<br>platform:                  Ship and Buoy SSTs from ICOADS R3.0 and NCEP GTS<br>standard_name_vocabulary:  CF Standard Name Table (v40, 25 January 2017)<br>processing_level:          NOAA Level 4<br>Conventions:               CF-1.6, ACDD-1.3<br>metadata_link:             :metadata_link = <a href="https://doi.org/10.7289/V5T72" target="_blank" rel="noopener">https://doi.org/10.7289/V5T72</a>…<br>creator_name:              Boyin Huang (original)<br>date_created:              2017-06-30T12:18:00Z (original)<br>product_version:           Version 5<br>creator_url_original:      <a href="https://www.ncei.noaa.gov" target="_blank" rel="noopener">https://www.ncei.noaa.gov</a><br>license:                   No constraints on data access or use<br>comment:                   SSTs were observed by conventional thermometer…<br>summary:                   ERSST.v5 is developed based on v4 after revisi…<br>dataset_title:             NOAA Extended Reconstructed SST V5</li></ul></blockquote><p>Process finished with exit code 0  </p><pre><code>## 数据分析  包含的变量：  - time_bnds  - sst    &gt; time_bnds:    time和nbnds  &gt; sst:  time、lat、lon  &gt; sst是本次数据处理核心，取出sst中信息进行初步分析：    ``` python    sst = data[&#39;sst&#39;]</code></pre><pre><code>&lt;xarray.DataArray &#39;sst&#39; (time: 1973, lat: 89, lon: 180)&gt;[31607460 values with dtype=float32]Coordinates:  * lat      (lat) float32 88.0 86.0 84.0 82.0 80.0 ... -82.0 -84.0 -86.0 -88.0  * lon      (lon) float32 0.0 2.0 4.0 6.0 8.0 ... 350.0 352.0 354.0 356.0 358.0  * time     (time) datetime64[ns] 1854-01-01 1854-02-01 ... 2018-05-01Attributes:    long_name:     Monthly Means of Sea Surface Temperature    units:         degC    var_desc:      Sea Surface Temperature    level_desc:    Surface    statistic:     Mean    dataset:       NOAA Extended Reconstructed SST V5    parent_stat:   Individual Values    actual_range:  [-1.8     42.32636]    valid_range:   [-1.8 45. ]Process finished with exit code 0</code></pre><p>可以看出，sst中包含三个主要信息：lat，lon已经time，事实上，sst的数据是一个三维矩阵，矩阵值的信息为time时刻，lat和lon构成的经纬坐标位置处的海域温度值，我们把sst的数据提取出来确认一下：  </p><pre><code class="lang-python">sst = data[&#39;sst&#39;].data</code></pre><p>运行上述代码，得到结果：  </p><pre><code>[[[-1.8 -1.8 -1.8 ... -1.8 -1.8 -1.8]  [-1.8 -1.8 -1.8 ... -1.8 -1.8 -1.8]  [-1.8 -1.8 -1.8 ... -1.8 -1.8 -1.8]  ...  [ nan  nan  nan ...  nan  nan  nan]  [ nan  nan  nan ...  nan  nan  nan]  [ nan  nan  nan ...  nan  nan  nan]] [[-1.8 -1.8 -1.8 ... -1.8 -1.8 -1.8]  [-1.8 -1.8 -1.8 ... -1.8 -1.8 -1.8]  [-1.8 -1.8 -1.8 ... -1.8 -1.8 -1.8]  ...  [ nan  nan  nan ...  nan  nan  nan]  [ nan  nan  nan ...  nan  nan  nan]  [ nan  nan  nan ...  nan  nan  nan]] [[-1.8 -1.8 -1.8 ... -1.8 -1.8 -1.8]  [-1.8 -1.8 -1.8 ... -1.8 -1.8 -1.8]  [-1.8 -1.8 -1.8 ... -1.8 -1.8 -1.8]  ...  [ nan  nan  nan ...  nan  nan  nan]  [ nan  nan  nan ...  nan  nan  nan]  [ nan  nan  nan ...  nan  nan  nan]] ... [[-1.8 -1.8 -1.8 ... -1.8 -1.8 -1.8]  [-1.8 -1.8 -1.8 ... -1.8 -1.8 -1.8]  [-1.8 -1.8 -1.8 ... -1.8 -1.8 -1.8]  ...  [ nan  nan  nan ...  nan  nan  nan]  [ nan  nan  nan ...  nan  nan  nan]  [ nan  nan  nan ...  nan  nan  nan]] [[-1.8 -1.8 -1.8 ... -1.8 -1.8 -1.8]  [-1.8 -1.8 -1.8 ... -1.8 -1.8 -1.8]  [-1.8 -1.8 -1.8 ... -1.8 -1.8 -1.8]  ...  [ nan  nan  nan ...  nan  nan  nan]  [ nan  nan  nan ...  nan  nan  nan]  [ nan  nan  nan ...  nan  nan  nan]] [[-1.8 -1.8 -1.8 ... -1.8 -1.8 -1.8]  [-1.8 -1.8 -1.8 ... -1.8 -1.8 -1.8]  [-1.8 -1.8 -1.8 ... -1.8 -1.8 -1.8]  ...  [ nan  nan  nan ...  nan  nan  nan]  [ nan  nan  nan ...  nan  nan  nan]  [ nan  nan  nan ...  nan  nan  nan]]]</code></pre><blockquote><p>效仿上述做法，提取其它需要的数据:  </p><pre><code class="lang-python">lat = data[&#39;lat&#39;].datalon = data[&#39;lon&#39;].datatime = data[&#39;time&#39;].data</code></pre><h2 id="写入csv文件"><a href="#写入csv文件" class="headerlink" title="写入csv文件"></a>写入csv文件</h2><h3 id="打开csv文件"><a href="#打开csv文件" class="headerlink" title="打开csv文件"></a>打开csv文件</h3><pre><code class="lang-python">with open(&#39;test11.csv&#39;,mode = &#39;w&#39;,newline=&#39;&#39;) as ice_file:</code></pre><p>不加   <code>newline=&#39;&#39;</code>      会导致csv每两行数据间会多出一行空格  </p><h3 id="写入表头"><a href="#写入表头" class="headerlink" title="写入表头"></a>写入表头</h3><p>在这里假定苏格兰海域范围为纬度+62～40，350～0～12  </p><pre><code class="lang-python">ice_write.writerow((&#39;time&#39;,&#39;lat&#39;,&#39;0&#39;,&#39;2&#39;,&#39;4&#39;,&#39;6&#39;,&#39;8&#39;,&#39;10&#39;,&#39;12&#39;,&#39;350&#39;,&#39;352&#39;,&#39;354&#39;,&#39;356&#39;,&#39;358&#39;))</code></pre><h3 id="写入信息"><a href="#写入信息" class="headerlink" title="写入信息"></a>写入信息</h3><p>从1968-01-01开始写入，time[1368]的值为1968-01-01T00:00:00.000000000  </p><pre><code class="lang-python">with open(&#39;test11.csv&#39;,mode = &#39;w&#39;,newline=&#39;&#39;) as ice_file:    ice_write = csv.writer(ice_file)    ice_write.writerow((&#39;time&#39;,&#39;lat&#39;,&#39;0&#39;,&#39;2&#39;,&#39;4&#39;,&#39;6&#39;,&#39;8&#39;,&#39;10&#39;,&#39;12&#39;,&#39;350&#39;,&#39;352&#39;,&#39;354&#39;,&#39;356&#39;,&#39;358&#39;))    for i in range(len(time)):            if i &gt; 1367:                for j in range(len(lat)):                    if lat[j]&gt;=40 and lat[j]&lt;=62:                            tt = []                            for k in range(len(lon)):                                if lon[k]&lt;=12 or lon[k]&gt;=350:                                    tt.append(sst[i][j][k])                            res = [str(time[i])[:10],lat[j]]                            for p in range(len(tt)):                                res.append(tt[p])                            ice_write.writerow(res)ice_file.close()</code></pre><p>因为writerow函数的参数仅为一个，所以把所有数据通过append函数整合在一起，<code>time[i][:10]</code>是为了消除时间后面的T00：00：00.00000000采用的取巧的方法</p><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><p>``` python<br>import xarray as xr<br>import csv<br>data = xr.open_dataset(‘ERsst.mnmean.nc’)<br>sst = data[‘sst’].data<br>lat = data[‘lat’].data<br>lon = data[‘lon’].data<br>time = data[‘time’].data<br>print(data[‘time’])</p></blockquote><p>with open(‘test11.csv’,mode = ‘w’,newline=’’) as ice_file:<br>    ice_write = csv.writer(ice_file)<br>    ice_write.writerow((‘time’,’lat’,’0’,’2’,’4’,’6’,’8’,’10’,’12’,’350’,’352’,’354’,’356’,’358’))<br>    for i in range(len(time)):<br>            if i &gt; 1367:<br>                for j in range(len(lat)):<br>                    if lat[j]&gt;=40 and lat[j]&lt;=62:<br>                            tt = []<br>                            for k in range(len(lon)):<br>                                if lon[k]&lt;=12 or lon[k]&gt;=350:<br>                                    tt.append(sst[i][j][k])<br>                            res = [str(time[i])[:10],lat[j]]<br>                            for p in range(len(tt)):<br>                                res.append(tt[p])<br>                            ice_write.writerow(res)<br>ice_file.close()<br>```  </p><h2 id="读取的北大数据链接"><a href="#读取的北大数据链接" class="headerlink" title="读取的北大数据链接"></a>读取的北大数据链接</h2><p><a href="https://geodata.pku.edu.cn/index.php?c=content&amp;a=show&amp;id=728%E8%BF%99%E9%87%8C%E5%8F%AF%E4%BB%A5%E4%B8%8B%E8%BD%BD" target="_blank" rel="noopener" title="数据范围：1854-01-01到2018-05-01">北京大学地理数据平台-全球海温数据</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;提前概要&quot;&gt;&lt;a href=&quot;#提前概要&quot; class=&quot;headerlink&quot; title=&quot;提前概要&quot;&gt;&lt;/a&gt;提前概要&lt;/h2&gt;&lt;p&gt;在2020年2月14日与队友讨论A题过程中需要查找苏格兰海域温度变化，因此第一次接触到气象数据netCDF(.nc)格式文件
      
    
    </summary>
    
    
    
      <category term="美赛" scheme="http://yoursite.com/tags/%E7%BE%8E%E8%B5%9B/"/>
    
      <category term="netCDF(.nc)" scheme="http://yoursite.com/tags/netCDF-nc/"/>
    
      <category term="csv" scheme="http://yoursite.com/tags/csv/"/>
    
  </entry>
  
  <entry>
    <title>Fuctions</title>
    <link href="http://yoursite.com/2020/01/30/Matlab_Fuctions/"/>
    <id>http://yoursite.com/2020/01/30/Matlab_Fuctions/</id>
    <published>2020-01-30T06:11:57.000Z</published>
    <updated>2020-02-21T06:07:54.566Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>factorial():阶乘   eg:factorial(79)  </p><p>prod():连乘    eg:prod(2:10)  </p><p>xlim():设置x轴范围 eg:xlim([0 2*pi])  </p><p>[AX,H1,H2]=plotyy(…)：返回AX中创建的两个坐标轴的句柄以及H1和H2中 每个图形绘图对象的句柄。AX（1）为左侧轴， AX（2）为右侧轴。<br>eg:set(get(AX(1),’Ylabel’),’String’,’Slow’)<br>   set(H1,’LineStyle’,’—‘)</p><p>question:print(‘-despsc’,’-tiff’,’-r300’,’name’)  </p><p>load data.mat   </p><p>importdata(‘myfile.txt’)  </p><p>xlsread(‘data.xls’)  xlsread(‘data.xlsx’)</p><p>xlswrite(‘data.xls’,S)  xlswrite(‘data.xlsx’,S)  </p><p>csvwrite(‘data.csv’,S)  </p><p>csvread(‘data.csv’)  </p><p>sava ‘data.txt’ S -ascii</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;factorial():阶乘   eg:factorial(79)  &lt;/p&gt;
&lt;p&gt;prod():连乘    eg:prod(2:10)  &lt;/p&gt;
&lt;p&gt;xlim():设置x轴范围 eg:xlim([0 2*pi])  &lt;/p&gt;
&lt;p&gt;[AX,
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Matlab学习记录</title>
    <link href="http://yoursite.com/2020/01/26/Matlab%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2020/01/26/Matlab%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</id>
    <published>2020-01-26T03:38:46.000Z</published>
    <updated>2020-02-16T08:23:24.290Z</updated>
    
    <content type="html"><![CDATA[<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% Logistic曲线模型基本形式：</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">%         y=1/(a+b*exp(-t))</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">% 将y'=1/y,x'=exp(-t),就可以将其转换为直线模型：</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">%         y=a+b*x'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">%Author: SherlockHarris</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment">%Date: Jan 26 2020</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="comment">%读入人口数据（1971-2000年）</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">Y=[<span class="number">33815</span> <span class="number">33981</span> <span class="number">34004</span> <span class="number">34165</span> <span class="number">34212</span> <span class="number">34327</span> <span class="number">34344</span> <span class="number">34458</span> <span class="number">34498</span> <span class="number">34476</span> <span class="number">34483</span> <span class="number">34488</span> <span class="number">34513</span> <span class="number">34497</span> <span class="number">34511</span> <span class="number">34520</span> <span class="number">34507</span> <span class="number">34509</span> <span class="number">34521</span> <span class="number">34513</span> <span class="number">34515</span> <span class="number">34517</span> <span class="number">34519</span> <span class="number">34519</span> <span class="number">34521</span> <span class="number">34521</span> <span class="number">34523</span> <span class="number">34525</span> <span class="number">34525</span> <span class="number">34527</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="comment">%读入时间比那辆数据（t=年份-1970）</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">T=[<span class="number">1</span>:<span class="number">30</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> t=<span class="number">1</span>:<span class="number">30</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    x(t) = <span class="built_in">exp</span>(-t);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    y(t) = <span class="number">1</span>/Y(<span class="number">1</span>,t);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">end</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="comment">%计算，并输出回归系数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">c = <span class="built_in">zeros</span>(<span class="number">30</span>,<span class="number">1</span>)+<span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">X=[c,x'];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">B=inv(X'*X)*X'*y';</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="number">30</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">%计算回归拟合值</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    z(<span class="built_in">i</span>)=B(<span class="number">1</span>,<span class="number">1</span>)+B(<span class="number">2</span>,<span class="number">1</span>)*x(<span class="built_in">i</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">%计算离差</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    s(<span class="built_in">i</span>) = y(<span class="built_in">i</span>)-sum(y)/<span class="number">30</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">%计算误差</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    w(<span class="built_in">i</span>)=z(<span class="built_in">i</span>)-y(<span class="built_in">i</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">end</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="comment">%计算离差平方和S</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">S=s*s';</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line"><span class="comment">%计算回归误差平方和Q</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">Q=w*w';</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"><span class="comment">%计算回归平方和U</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">U=S-Q;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"><span class="comment">%计算，并输出F检验值</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">F=<span class="number">28</span>*U/Q;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="comment">%计算非线性回归模型的拟合值</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:<span class="number">30</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">    Y(<span class="built_in">j</span>)=<span class="number">1</span>/(B(<span class="number">1</span>,<span class="number">1</span>)+B(<span class="number">2</span>,<span class="number">1</span>)*<span class="built_in">exp</span>(-<span class="built_in">j</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">end</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"><span class="comment">%计算非线性回归模型的拟合曲线（Logistic曲线）</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">plot</span>(T,Y)</span></pre></td></tr></table></figure><h2 id="学习心得："><a href="#学习心得：" class="headerlink" title="学习心得："></a>学习心得：</h2><h3 id="inv-函数作用：求矩阵逆运算"><a href="#inv-函数作用：求矩阵逆运算" class="headerlink" title="inv()函数作用：求矩阵逆运算"></a>inv()函数作用：求矩阵逆运算</h3><h3 id=""><a href="#" class="headerlink" title=" "></a> </h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;figure class=&quot;highlight matlab&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
